{"/home/travis/build/npmtest/node-npmtest-gremlins.js/test.js":"/* istanbul instrument in package npmtest_gremlins_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/lib.npmtest_gremlins.js.js":"/* istanbul instrument in package npmtest_gremlins_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_gremlins_js = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_gremlins_js = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-gremlins.js && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_gremlins_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_gremlins_js\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_gremlins_js.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_gremlins_js.rollup.js'] =\n            local.assetsDict['/assets.npmtest_gremlins_js.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_gremlins_js.__dirname + '/lib.npmtest_gremlins_js.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/gremlins.min.js":"/**\n * This file is generated. Don't modify it directly. (c)\n */\n\n/**\n * almond 0.2.6 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n\n//  Chance.js 0.5.4\n//  http://chancejs.com\n//  (c) 2013 Victor Quinn\n//  Chance may be freely distributed or modified under the MIT license.\n\n/**\n * gremlins.js 0.1.0 Copyright (c) 2014, marmelab\n * Available via the MIT license.\n * see: http://github.com/marmelab/gremlins.js for details\n */\n\n(function(e,t){typeof define==\"function\"&&define.amd?define(t):typeof exports==\"object\"?module.exports=t():e.gremlins=t()})(this,function(){var e,t,n;return function(r){function d(e,t){return h.call(e,t)}function v(e,t){var n,r,i,s,o,u,a,f,c,h,p=t&&t.split(\"/\"),d=l.map,v=d&&d[\"*\"]||{};if(e&&e.charAt(0)===\".\")if(t){p=p.slice(0,p.length-1),e=p.concat(e.split(\"/\"));for(f=0;f<e.length;f+=1){h=e[f];if(h===\".\")e.splice(f,1),f-=1;else if(h===\"..\"){if(f===1&&(e[2]===\"..\"||e[0]===\"..\"))break;f>0&&(e.splice(f-1,2),f-=2)}}e=e.join(\"/\")}else e.indexOf(\"./\")===0&&(e=e.substring(2));if((p||v)&&d){n=e.split(\"/\");for(f=n.length;f>0;f-=1){r=n.slice(0,f).join(\"/\");if(p)for(c=p.length;c>0;c-=1){i=d[p.slice(0,c).join(\"/\")];if(i){i=i[r];if(i){s=i,o=f;break}}}if(s)break;!u&&v&&v[r]&&(u=v[r],a=f)}!s&&u&&(s=u,o=a),s&&(n.splice(0,o,s),e=n.join(\"/\"))}return e}function m(e,t){return function(){return s.apply(r,p.call(arguments,0).concat([e,t]))}}function g(e){return function(t){return v(t,e)}}function y(e){return function(t){a[e]=t}}function b(e){if(d(f,e)){var t=f[e];delete f[e],c[e]=!0,i.apply(r,t)}if(!d(a,e)&&!d(c,e))throw new Error(\"No \"+e);return a[e]}function w(e){var t,n=e?e.indexOf(\"!\"):-1;return n>-1&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function E(e){return function(){return l&&l.config&&l.config[e]||{}}}var i,s,o,u,a={},f={},l={},c={},h=Object.prototype.hasOwnProperty,p=[].slice;o=function(e,t){var n,r=w(e),i=r[0];return e=r[1],i&&(i=v(i,t),n=b(i)),i?n&&n.normalize?e=n.normalize(e,g(t)):e=v(e,t):(e=v(e,t),r=w(e),i=r[0],e=r[1],i&&(n=b(i))),{f:i?i+\"!\"+e:e,n:e,pr:i,p:n}},u={require:function(e){return m(e)},exports:function(e){var t=a[e];return typeof t!=\"undefined\"?t:a[e]={}},module:function(e){return{id:e,uri:\"\",exports:a[e],config:E(e)}}},i=function(e,t,n,i){var s,l,h,p,v,g=[],w;i=i||e;if(typeof n==\"function\"){t=!t.length&&n.length?[\"require\",\"exports\",\"module\"]:t;for(v=0;v<t.length;v+=1){p=o(t[v],i),l=p.f;if(l===\"require\")g[v]=u.require(e);else if(l===\"exports\")g[v]=u.exports(e),w=!0;else if(l===\"module\")s=g[v]=u.module(e);else if(d(a,l)||d(f,l)||d(c,l))g[v]=b(l);else{if(!p.p)throw new Error(e+\" missing \"+l);p.p.load(p.n,m(i,!0),y(l),{}),g[v]=a[l]}}h=n.apply(a[e],g);if(e)if(s&&s.exports!==r&&s.exports!==a[e])a[e]=s.exports;else if(h!==r||!w)a[e]=h}else e&&(a[e]=n)},e=t=s=function(e,t,n,a,f){return typeof e==\"string\"?u[e]?u[e](t):b(o(e,t).f):(e.splice||(l=e,t.splice?(e=t,t=n,n=null):e=r),t=t||function(){},typeof n==\"function\"&&(n=a,a=f),a?i(r,e,t,n):setTimeout(function(){i(r,e,t,n)},4),s)},s.config=function(e){return l=e,l.deps&&s(l.deps,l.callback),s},e._defined=a,n=function(e,t,n){t.splice||(n=t,t=[]),!d(a,e)&&!d(f,e)&&(f[e]=[e,t,n])},n.amd={jQuery:!0}}(),n(\"../src/vendor/almond.js\",function(){}),function(){function a(e,t){e||(e={});if(!t)return e;for(var n in t)typeof e[n]==\"undefined\"&&(e[n]=t[n]);return e}function f(e,t){if(e)throw new RangeError(t)}var e=9007199254740992,t=-e,r=\"0123456789\",i=\"abcdefghijklmnopqrstuvwxyz\",s=i.toUpperCase(),o=r+\"abcdef\",u=function(e){e!==undefined&&(typeof e==\"function\"?this.random=e:this.seed=e),typeof this.random==\"undefined\"&&(this.mt=this.mersenne_twister(e),this.random=function(){return this.mt.random(this.seed)})};u.prototype.bool=function(e){return e=a(e,{likelihood:50}),f(e.likelihood<0||e.likelihood>100,\"Chance: Likelihood accepts values from 0 to 100.\"),this.random()*100<e.likelihood},u.prototype.character=function(e){e=a(e);var t=\"!@#$%^&*()[]\",n,o;return f(e.alpha&&e.symbols,\"Chance: Cannot specify both alpha and symbols.\"),e.casing===\"lower\"?n=i:e.casing===\"upper\"?n=s:n=i+s,e.pool?o=e.pool:e.alpha?o=n:e.symbols?o=t:o=n+r+t,o.charAt(this.natural({max:o.length-1}))},u.prototype.floating=function(t){var n,r;t=a(t,{fixed:4});var i=Math.pow(10,t.fixed);f(t.fixed&&t.precision,\"Chance: Cannot specify both fixed and precision.\");var s=e/i,o=-s;f(t.min&&t.fixed&&t.min<o,\"Chance: Min specified is out of range with fixed. Min should be, at least, \"+o),f(t.max&&t.fixed&&t.max>s,\"Chance: Max specified is out of range with fixed. Max should be, at most, \"+s),t=a(t,{min:o,max:s}),n=this.integer({min:t.min*i,max:t.max*i});var u=(n/i).toFixed(t.fixed);return parseFloat(u)},u.prototype.integer=function(n){var r,i;n=a(n,{min:t,max:e}),i=Math.max(Math.abs(n.min),Math.abs(n.max));do r=this.natural({max:i}),r=this.bool()?r:r*-1;while(r<n.min||r>n.max);return r},u.prototype.natural=function(t){return t=a(t,{min:0,max:e}),f(t.min>t.max,\"Chance: Min cannot be greater than Max.\"),Math.floor(this.random()*(t.max-t.min+1)+t.min)},u.prototype.normal=function(e){e=a(e,{mean:0,dev:1});var t,n,r,i,s=e.mean,o=e.dev;do n=this.random()*2-1,r=this.random()*2-1,t=n*n+r*r;while(t>=1);return i=n*Math.sqrt(-2*Math.log(t)/t),o*i+s},u.prototype.string=function(e){e=a(e);var t=e.length||this.natural({min:5,max:20}),n=\"\",r=e.pool;for(var i=0;i<t;i++)n+=this.character({pool:r});return n},u.prototype.capitalize=function(e){return e.charAt(0).toUpperCase()+e.substr(1)},u.prototype.mixin=function(e){var t=this;for(var n in e)u.prototype[n]=e[n];return this},u.prototype.pick=function(e,t){return!t||t===1?e[this.natural({max:e.length-1})]:this.shuffle(e).slice(0,t)},u.prototype.shuffle=function(e){var t=e.slice(0),n=[],r=0,i=Number(t.length);for(var s=0;s<i;s++)r=this.natural({max:t.length-1}),n[s]=t[r],t.splice(r,1);return n},u.prototype.paragraph=function(e){e=a(e);var t=e.sentences||this.natural({min:3,max:7}),n=[];for(var r=0;r<t;r++)n.push(this.sentence());return n.join(\" \")},u.prototype.sentence=function(e){e=a(e);var t=e.words||this.natural({min:12,max:18}),n,r=[];for(var i=0;i<t;i++)r.push(this.word());return n=r.join(\" \"),n=this.capitalize(n)+\".\",n},u.prototype.syllable=function(e){e=a(e);var t=e.length||this.natural({min:2,max:3}),n=\"bcdfghjklmnprstvwz\",r=\"aeiou\",i=n+r,s=\"\",o;for(var u=0;u<t;u++)u===0?o=this.character({pool:i}):n.indexOf(o)===-1?o=this.character({pool:n}):o=this.character({pool:r}),s+=o;return s},u.prototype.word=function(e){e=a(e),f(e.syllables&&e.length,\"Chance: Cannot specify both syllables AND length.\");var t=e.syllables||this.natural({min:1,max:3}),n=\"\";if(e.length){do n+=this.syllable();while(n.length<e.length);n=n.substring(0,e.length)}else for(var r=0;r<t;r++)n+=this.syllable();return n},u.prototype.age=function(e){e=a(e);var t;switch(e.type){case\"child\":t=this.natural({min:1,max:12});break;case\"teen\":t=this.natural({min:13,max:19});break;case\"adult\":t=this.natural({min:18,max:120});break;case\"senior\":t=this.natural({min:65,max:120});break;default:t=this.natural({min:1,max:120})}return t},u.prototype.birthday=function(e){return e=a(e,{year:(new Date).getFullYear()-this.age(e)}),this.date(e)};var l=[\"Sophia\",\"Emma\",\"Isabella\",\"Jacob\",\"Mason\",\"Ethan\",\"Noah\",\"Olivia\",\"William\",\"Liam\",\"Jayden\",\"Michael\",\"Ava\",\"Alexander\",\"Aiden\",\"Daniel\",\"Matthew\",\"Elijah\",\"Emily\",\"James\",\"Anthony\",\"Benjamin\",\"Abigail\",\"Joshua\",\"Andrew\",\"David\",\"Joseph\",\"Logan\",\"Jackson\",\"Mia\",\"Christopher\",\"Gabriel\",\"Madison\",\"Samuel\",\"Ryan\",\"Lucas\",\"John\",\"Nathan\",\"Isaac\",\"Dylan\",\"Caleb\",\"Elizabeth\",\"Chloe\",\"Christian\",\"Landon\",\"Jonathan\",\"Carter\",\"Ella\",\"Luke\",\"Owen\",\"Brayden\",\"Avery\",\"Gavin\",\"Wyatt\",\"Addison\",\"Isaiah\",\"Aubrey\",\"Henry\",\"Eli\",\"Hunter\",\"Lily\",\"Jack\",\"Natalie\",\"Evan\",\"Sofia\",\"Jordan\",\"Nicholas\",\"Tyler\",\"Aaron\",\"Charlotte\",\"Zoey\",\"Jeremiah\",\"Julian\",\"Cameron\",\"Grace\",\"Hannah\",\"Amelia\",\"Harper\",\"Levi\",\"Lillian\",\"Brandon\",\"Angel\",\"Austin\",\"Connor\",\"Adrian\",\"Robert\",\"Samantha\",\"Charles\",\"Evelyn\",\"Victoria\",\"Thomas\",\"Brooklyn\",\"Sebastian\",\"Zoe\",\"Colton\",\"Jaxon\",\"Layla\",\"Kevin\",\"Zachary\",\"Ayden\",\"Dominic\",\"Blake\",\"Jose\",\"Hailey\",\"Oliver\",\"Justin\",\"Bentley\",\"Leah\",\"Jason\",\"Chase\",\"Ian\",\"Kaylee\",\"Anna\",\"Aaliyah\",\"Gabriella\",\"Josiah\",\"Allison\",\"Parker\",\"Xavier\",\"Nevaeh\",\"Alexis\",\"Adam\",\"Audrey\",\"Cooper\",\"Savannah\",\"Sarah\",\"Alyssa\",\"Claire\",\"Taylor\",\"Riley\",\"Camila\",\"Nathaniel\",\"Arianna\",\"Ashley\",\"Grayson\",\"Jace\",\"Brianna\",\"Carson\",\"Sophie\",\"Peyton\",\"Nolan\",\"Tristan\",\"Luis\",\"Brody\",\"Bella\",\"Khloe\",\"Genesis\",\"Alexa\",\"Juan\",\"Hudson\",\"Serenity\",\"Kylie\",\"Aubree\",\"Scarlett\",\"Bryson\",\"Carlos\",\"Stella\",\"Maya\",\"Easton\",\"Katherine\",\"Julia\",\"Damian\",\"Alex\",\"Kayden\",\"Ryder\",\"Lucy\",\"Madelyn\",\"Jesus\",\"Cole\",\"Autumn\",\"Makayla\",\"Kayla\",\"Mackenzie\",\"Micah\",\"Vincent\",\"Max\",\"Lauren\",\"Jaxson\",\"Gianna\",\"Eric\",\"Ariana\",\"Asher\",\"Hayden\",\"Faith\",\"Alexandra\",\"Melanie\",\"Sydney\",\"Bailey\",\"Caroline\",\"Naomi\",\"Morgan\",\"Kennedy\",\"Ellie\",\"Jasmine\",\"Eva\",\"Skylar\",\"Diego\",\"Kimberly\",\"Violet\",\"Molly\",\"Miles\",\"Steven\",\"Aria\",\"Ivan\",\"Jocelyn\",\"Trinity\",\"Elias\",\"Aidan\",\"Maxwell\",\"London\",\"Bryce\",\"Lydia\",\"Madeline\",\"Antonio\",\"Giovanni\",\"Reagan\",\"Timothy\",\"Bryan\",\"Piper\",\"Andrea\",\"Santiago\",\"Annabelle\",\"Maria\",\"Colin\",\"Richard\",\"Braxton\",\"Kaleb\",\"Brooke\",\"Kyle\",\"Kaden\",\"Preston\",\"Payton\",\"Miguel\",\"Jonah\",\"Paisley\",\"Paige\",\"Lincoln\",\"Ruby\",\"Nora\",\"Riley\",\"Mariah\",\"Leo\",\"Victor\",\"Brady\",\"Jeremy\",\"Mateo\",\"Brian\",\"Jaden\",\"Ashton\",\"Patrick\",\"Rylee\",\"Declan\",\"Lilly\",\"Brielle\",\"Sean\",\"Joel\",\"Gael\",\"Sawyer\",\"Alejandro\",\"Jade\",\"Marcus\",\"Destiny\",\"Leonardo\",\"Jesse\",\"Caden\",\"Jake\",\"Kaiden\",\"Nicole\",\"Mila\",\"Wesley\",\"Kendall\",\"Liliana\",\"Camden\",\"Kaitlyn\",\"Natalia\",\"Sadie\",\"Edward\",\"Brantley\",\"Jordyn\",\"Roman\",\"Vanessa\",\"Mary\",\"Mya\",\"Penelope\",\"Isabelle\",\"Alice\",\"Axel\",\"Silas\",\"Jude\",\"Grant\",\"Reese\",\"Gabrielle\",\"Hadley\",\"Katelyn\",\"Angelina\",\"Rachel\",\"Isabel\",\"Eleanor\",\"Cayden\",\"Emmanuel\",\"George\",\"Clara\",\"Brooklynn\",\"Jessica\",\"Maddox\",\"Malachi\",\"Bradley\",\"Alan\",\"Weston\",\"Elena\",\"Gage\",\"Aliyah\",\"Vivian\",\"Laila\",\"Sara\",\"Amy\",\"Devin\",\"Eliana\",\"Greyson\",\"Lyla\",\"Juliana\",\"Kenneth\",\"Mark\",\"Oscar\",\"Tanner\",\"Rylan\",\"Valeria\",\"Adriana\",\"Nicolas\",\"Makenzie\",\"Harrison\",\"Elise\",\"Mckenzie\",\"Derek\",\"Quinn\",\"Delilah\",\"Peyton\",\"Ezra\",\"Cora\",\"Kylee\",\"Tucker\",\"Emmett\",\"Avery\",\"Cody\",\"Rebecca\",\"Gracie\",\"Izabella\",\"Calvin\",\"Andres\",\"Jorge\",\"Abel\",\"Paul\",\"Abraham\",\"Kai\",\"Josephine\",\"Alaina\",\"Michelle\",\"Jennifer\",\"Collin\",\"Theodore\",\"Ezekiel\",\"Eden\",\"Omar\",\"Jayce\",\"Valentina\",\"Conner\",\"Bennett\",\"Aurora\",\"Catherine\",\"Stephanie\",\"Trevor\",\"Valerie\",\"Eduardo\",\"Peter\",\"Maximus\",\"Jayla\",\"Jaiden\",\"Willow\",\"Jameson\",\"Seth\",\"Daisy\",\"Alana\",\"Melody\",\"Hazel\",\"Kingston\",\"Summer\",\"Melissa\",\"Javier\",\"Margaret\",\"Travis\",\"Kinsley\",\"Kinley\",\"Garrett\",\"Everett\",\"Ariel\",\"Lila\",\"Graham\",\"Giselle\",\"Ryleigh\",\"Xander\",\"Haley\",\"Julianna\",\"Ivy\",\"Alivia\",\"Cristian\",\"Brynn\",\"Damien\",\"Ryker\",\"Griffin\",\"Keira\",\"Daniela\",\"Aniyah\",\"Angela\",\"Kate\",\"Londyn\",\"Corbin\",\"Myles\",\"Hayden\",\"Harmony\",\"Adalyn\",\"Luca\",\"Zane\",\"Francisco\",\"Ricardo\",\"Alexis\",\"Stephen\",\"Zayden\",\"Megan\",\"Allie\",\"Gabriela\",\"Iker\",\"Drake\",\"Alayna\",\"Lukas\",\"Presley\",\"Charlie\",\"Spencer\",\"Zion\",\"Erick\",\"Jenna\",\"Josue\",\"Alexandria\",\"Ashlyn\",\"Adrianna\",\"Jada\",\"Jeffrey\",\"Trenton\",\"Fiona\",\"Chance\",\"Norah\",\"Paxton\",\"Elliot\",\"Emery\",\"Fernando\",\"Maci\",\"Miranda\",\"Keegan\",\"Landen\",\"Ximena\",\"Amaya\",\"Manuel\",\"Amir\",\"Shane\",\"Cecilia\",\"Raymond\",\"Andre\",\"Ana\",\"Shelby\",\"Katie\",\"Hope\",\"Callie\",\"Jordan\",\"Luna\",\"Leilani\",\"Eliza\",\"Mckenna\",\"Angel\",\"Genevieve\",\"Makenna\",\"Isla\",\"Lola\",\"Danielle\",\"Chelsea\",\"Leila\",\"Tessa\",\"Adelyn\",\"Camille\",\"Mikayla\",\"Adeline\",\"Adalynn\",\"Sienna\",\"Esther\",\"Jacqueline\",\"Emerson\",\"Arabella\",\"Maggie\",\"Athena\",\"Lucia\",\"Lexi\",\"Ayla\"];u.prototype.first=function(){return this.pick(l)},u.prototype.gender=function(){return this.pick([\"Male\",\"Female\"])};var c=[\"Smith\",\"Johnson\",\"Williams\",\"Jones\",\"Brown\",\"Davis\",\"Miller\",\"Wilson\",\"Moore\",\"Taylor\",\"Anderson\",\"Thomas\",\"Jackson\",\"White\",\"Harris\",\"Martin\",\"Thompson\",\"Garcia\",\"Martinez\",\"Robinson\",\"Clark\",\"Rodriguez\",\"Lewis\",\"Lee\",\"Walker\",\"Hall\",\"Allen\",\"Young\",\"Hernandez\",\"King\",\"Wright\",\"Lopez\",\"Hill\",\"Scott\",\"Green\",\"Adams\",\"Baker\",\"Gonzalez\",\"Nelson\",\"Carter\",\"Mitchell\",\"Perez\",\"Roberts\",\"Turner\",\"Phillips\",\"Campbell\",\"Parker\",\"Evans\",\"Edwards\",\"Collins\",\"Stewart\",\"Sanchez\",\"Morris\",\"Rogers\",\"Reed\",\"Cook\",\"Morgan\",\"Bell\",\"Murphy\",\"Bailey\",\"Rivera\",\"Cooper\",\"Richardson\",\"Cox\",\"Howard\",\"Ward\",\"Torres\",\"Peterson\",\"Gray\",\"Ramirez\",\"James\",\"Watson\",\"Brooks\",\"Kelly\",\"Sanders\",\"Price\",\"Bennett\",\"Wood\",\"Barnes\",\"Ross\",\"Henderson\",\"Coleman\",\"Jenkins\",\"Perry\",\"Powell\",\"Long\",\"Patterson\",\"Hughes\",\"Flores\",\"Washington\",\"Butler\",\"Simmons\",\"Foster\",\"Gonzales\",\"Bryant\",\"Alexander\",\"Russell\",\"Griffin\",\"Diaz\",\"Hayes\",\"Myers\",\"Ford\",\"Hamilton\",\"Graham\",\"Sullivan\",\"Wallace\",\"Woods\",\"Cole\",\"West\",\"Jordan\",\"Owens\",\"Reynolds\",\"Fisher\",\"Ellis\",\"Harrison\",\"Gibson\",\"McDonald\",\"Cruz\",\"Marshall\",\"Ortiz\",\"Gomez\",\"Murray\",\"Freeman\",\"Wells\",\"Webb\",\"Simpson\",\"Stevens\",\"Tucker\",\"Porter\",\"Hunter\",\"Hicks\",\"Crawford\",\"Henry\",\"Boyd\",\"Mason\",\"Morales\",\"Kennedy\",\"Warren\",\"Dixon\",\"Ramos\",\"Reyes\",\"Burns\",\"Gordon\",\"Shaw\",\"Holmes\",\"Rice\",\"Robertson\",\"Hunt\",\"Black\",\"Daniels\",\"Palmer\",\"Mills\",\"Nichols\",\"Grant\",\"Knight\",\"Ferguson\",\"Rose\",\"Stone\",\"Hawkins\",\"Dunn\",\"Perkins\",\"Hudson\",\"Spencer\",\"Gardner\",\"Stephens\",\"Payne\",\"Pierce\",\"Berry\",\"Matthews\",\"Arnold\",\"Wagner\",\"Willis\",\"Ray\",\"Watkins\",\"Olson\",\"Carroll\",\"Duncan\",\"Snyder\",\"Hart\",\"Cunningham\",\"Bradley\",\"Lane\",\"Andrews\",\"Ruiz\",\"Harper\",\"Fox\",\"Riley\",\"Armstrong\",\"Carpenter\",\"Weaver\",\"Greene\",\"Lawrence\",\"Elliott\",\"Chavez\",\"Sims\",\"Austin\",\"Peters\",\"Kelley\",\"Franklin\",\"Lawson\",\"Fields\",\"Gutierrez\",\"Ryan\",\"Schmidt\",\"Carr\",\"Vasquez\",\"Castillo\",\"Wheeler\",\"Chapman\",\"Oliver\",\"Montgomery\",\"Richards\",\"Williamson\",\"Johnston\",\"Banks\",\"Meyer\",\"Bishop\",\"McCoy\",\"Howell\",\"Alvarez\",\"Morrison\",\"Hansen\",\"Fernandez\",\"Garza\",\"Harvey\",\"Little\",\"Burton\",\"Stanley\",\"Nguyen\",\"George\",\"Jacobs\",\"Reid\",\"Kim\",\"Fuller\",\"Lynch\",\"Dean\",\"Gilbert\",\"Garrett\",\"Romero\",\"Welch\",\"Larson\",\"Frazier\",\"Burke\",\"Hanson\",\"Day\",\"Mendoza\",\"Moreno\",\"Bowman\",\"Medina\",\"Fowler\",\"Brewer\",\"Hoffman\",\"Carlson\",\"Silva\",\"Pearson\",\"Holland\",\"Douglas\",\"Fleming\",\"Jensen\",\"Vargas\",\"Byrd\",\"Davidson\",\"Hopkins\",\"May\",\"Terry\",\"Herrera\",\"Wade\",\"Soto\",\"Walters\",\"Curtis\",\"Neal\",\"Caldwell\",\"Lowe\",\"Jennings\",\"Barnett\",\"Graves\",\"Jimenez\",\"Horton\",\"Shelton\",\"Barrett\",\"Obrien\",\"Castro\",\"Sutton\",\"Gregory\",\"McKinney\",\"Lucas\",\"Miles\",\"Craig\",\"Rodriquez\",\"Chambers\",\"Holt\",\"Lambert\",\"Fletcher\",\"Watts\",\"Bates\",\"Hale\",\"Rhodes\",\"Pena\",\"Beck\",\"Newman\",\"Haynes\",\"McDaniel\",\"Mendez\",\"Bush\",\"Vaughn\",\"Parks\",\"Dawson\",\"Santiago\",\"Norris\",\"Hardy\",\"Love\",\"Steele\",\"Curry\",\"Powers\",\"Schultz\",\"Barker\",\"Guzman\",\"Page\",\"Munoz\",\"Ball\",\"Keller\",\"Chandler\",\"Weber\",\"Leonard\",\"Walsh\",\"Lyons\",\"Ramsey\",\"Wolfe\",\"Schneider\",\"Mullins\",\"Benson\",\"Sharp\",\"Bowen\",\"Daniel\",\"Barber\",\"Cummings\",\"Hines\",\"Baldwin\",\"Griffith\",\"Valdez\",\"Hubbard\",\"Salazar\",\"Reeves\",\"Warner\",\"Stevenson\",\"Burgess\",\"Santos\",\"Tate\",\"Cross\",\"Garner\",\"Mann\",\"Mack\",\"Moss\",\"Thornton\",\"Dennis\",\"McGee\",\"Farmer\",\"Delgado\",\"Aguilar\",\"Vega\",\"Glover\",\"Manning\",\"Cohen\",\"Harmon\",\"Rodgers\",\"Robbins\",\"Newton\",\"Todd\",\"Blair\",\"Higgins\",\"Ingram\",\"Reese\",\"Cannon\",\"Strickland\",\"Townsend\",\"Potter\",\"Goodwin\",\"Walton\",\"Rowe\",\"Hampton\",\"Ortega\",\"Patton\",\"Swanson\",\"Joseph\",\"Francis\",\"Goodman\",\"Maldonado\",\"Yates\",\"Becker\",\"Erickson\",\"Hodges\",\"Rios\",\"Conner\",\"Adkins\",\"Webster\",\"Norman\",\"Malone\",\"Hammond\",\"Flowers\",\"Cobb\",\"Moody\",\"Quinn\",\"Blake\",\"Maxwell\",\"Pope\",\"Floyd\",\"Osborne\",\"Paul\",\"McCarthy\",\"Guerrero\",\"Lindsey\",\"Estrada\",\"Sandoval\",\"Gibbs\",\"Tyler\",\"Gross\",\"Fitzgerald\",\"Stokes\",\"Doyle\",\"Sherman\",\"Saunders\",\"Wise\",\"Colon\",\"Gill\",\"Alvarado\",\"Greer\",\"Padilla\",\"Simon\",\"Waters\",\"Nunez\",\"Ballard\",\"Schwartz\",\"McBride\",\"Houston\",\"Christensen\",\"Klein\",\"Pratt\",\"Briggs\",\"Parsons\",\"McLaughlin\",\"Zimmerman\",\"French\",\"Buchanan\",\"Moran\",\"Copeland\",\"Roy\",\"Pittman\",\"Brady\",\"McCormick\",\"Holloway\",\"Brock\",\"Poole\",\"Frank\",\"Logan\",\"Owen\",\"Bass\",\"Marsh\",\"Drake\",\"Wong\",\"Jefferson\",\"Park\",\"Morton\",\"Abbott\",\"Sparks\",\"Patrick\",\"Norton\",\"Huff\",\"Clayton\",\"Massey\",\"Lloyd\",\"Figueroa\",\"Carson\",\"Bowers\",\"Roberson\",\"Barton\",\"Tran\",\"Lamb\",\"Harrington\",\"Casey\",\"Boone\",\"Cortez\",\"Clarke\",\"Mathis\",\"Singleton\",\"Wilkins\",\"Cain\",\"Bryan\",\"Underwood\",\"Hogan\",\"McKenzie\",\"Collier\",\"Luna\",\"Phelps\",\"McGuire\",\"Allison\",\"Bridges\",\"Wilkerson\",\"Nash\",\"Summers\",\"Atkins\"];u.prototype.last=function(){return this.pick(c)},u.prototype.name=function(e){e=a(e);var t=this.first(),n=this.last(),r;return e.middle?r=t+\" \"+this.first()+\" \"+n:e.middle_initial?r=t+\" \"+this.character({alpha:!0,casing:\"upper\"})+\". \"+n:r=t+\" \"+n,e.prefix&&(r=this.prefix()+\" \"+r),r},u.prototype.name_prefixes=function(){return[{name:\"Doctor\",abbreviation:\"Dr.\"},{name:\"Miss\",abbreviation:\"Miss\"},{name:\"Misses\",abbreviation:\"Mrs.\"},{name:\"Mister\",abbreviation:\"Mr.\"}]},u.prototype.prefix=function(e){return this.name_prefix(e)},u.prototype.name_prefix=function(e){return e=a(e),e.full?this.pick(this.name_prefixes()).name:this.pick(this.name_prefixes()).abbreviation},u.prototype.color=function(e){function t(e,t){return[e,e,e].join(t||\"\")}e=a(e,{format:this.pick([\"hex\",\"shorthex\",\"rgb\"]),grayscale:!1});var n=e.grayscale;if(e.format===\"hex\")return\"#\"+(n?t(this.hash({length:2})):this.hash({length:6}));if(e.format===\"shorthex\")return\"#\"+(n?t(this.hash({length:1})):this.hash({length:3}));if(e.format===\"rgb\")return n?\"rgb(\"+t(this.natural({max:255}),\",\")+\")\":\"rgb(\"+this.natural({max:255})+\",\"+this.natural({max:255})+\",\"+this.natural({max:255})+\")\";throw new Error('Invalid format provided. Please provide one of \"hex\", \"shorthex\", or \"rgb\"')},u.prototype.domain=function(e){return e=a(e),this.word()+\".\"+(e.tld||this.tld())},u.prototype.email=function(e){return e=a(e),this.word()+\"@\"+(e.domain||this.domain())},u.prototype.fbid=function(){return parseInt(\"10000\"+this.natural({max:1e11}),10)},u.prototype.hashtag=function(){return\"#\"+this.word()},u.prototype.ip=function(){return this.natural({max:255})+\".\"+this.natural({max:255})+\".\"+this.natural({max:255})+\".\"+this.natural({max:255})},u.prototype.ipv6=function(){var e=\"\";for(var t=0;t<8;t++)e+=this.hash({length:4})+\":\";return e.substr(0,e.length-1)},u.prototype.klout=function(){return this.natural({min:1,max:99})},u.prototype.tlds=function(){return[\"com\",\"org\",\"edu\",\"gov\",\"co.uk\",\"net\",\"io\"]},u.prototype.tld=function(){return this.pick(this.tlds())},u.prototype.twitter=function(){return\"@\"+this.word()},u.prototype.address=function(e){return e=a(e),this.natural({min:5,max:2e3})+\" \"+this.street(e)},u.prototype.areacode=function(e){e=a(e,{parens:!0});var t=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:8}).toString()+this.natural({min:0,max:9}).toString();return e.parens?\"(\"+t+\")\":t},u.prototype.city=function(){return this.capitalize(this.word({syllables:3}))},u.prototype.coordinates=function(e){return e=a(e),this.latitude(e)+\", \"+this.longitude(e)},u.prototype.latitude=function(e){return e=a(e,{fixed:5}),this.floating({min:-90,max:90,fixed:e.fixed})},u.prototype.longitude=function(e){return e=a(e,{fixed:5}),this.floating({min:0,max:180,fixed:e.fixed})},u.prototype.phone=function(e){e=a(e,{formatted:!0}),e.formatted||(e.parens=!1);var t=this.areacode(e).toString(),n=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:9}).toString()+this.natural({min:0,max:9}).toString(),r=this.natural({min:1e3,max:9999}).toString();return e.formatted?t+\" \"+n+\"-\"+r:t+n+r},u.prototype.postal=function(){var e=this.character({pool:\"XVTSRPNKLMHJGECBA\"}),t=e+this.natural({max:9})+this.character({alpha:!0,casing:\"upper\"}),n=this.natural({max:9})+this.character({alpha:!0,casing:\"upper\"})+this.natural({max:9});return t+\" \"+n},u.prototype.provinces=function(){return[{name:\"Alberta\",abbreviation:\"AB\"},{name:\"British Columbia\",abbreviation:\"BC\"},{name:\"Manitoba\",abbreviation:\"MB\"},{name:\"New Brunswick\",abbreviation:\"NB\"},{name:\"Newfoundland and Labrador\",abbreviation:\"NL\"},{name:\"Nova Scotia\",abbreviation:\"NS\"},{name:\"Ontario\",abbreviation:\"ON\"},{name:\"Prince Edward Island\",abbreviation:\"PE\"},{name:\"Quebec\",abbreviation:\"QC\"},{name:\"Saskatchewan\",abbreviation:\"SK\"},{name:\"Northwest Territories\",abbreviation:\"NT\"},{name:\"Nunavut\",abbreviation:\"NU\"},{name:\"Yukon\",abbreviation:\"YT\"}]},u.prototype.province=function(e){return e&&e.full?this.pick(this.provinces()).name:this.pick(this.provinces()).abbreviation},u.prototype.radio=function(e){e=a(e,{side:\"?\"});var t=\"\";switch(e.side.toLowerCase()){case\"east\":case\"e\":t=\"W\";break;case\"west\":case\"w\":t=\"K\";break;default:t=this.character({pool:\"KW\"})}return t+this.character({alpha:!0,casing:\"upper\"})+this.character({alpha:!0,casing:\"upper\"})+this.character({alpha:!0,casing:\"upper\"})},u.prototype.state=function(e){return e&&e.full?this.pick(this.states()).name:this.pick(this.states()).abbreviation},u.prototype.states=function(){return[{name:\"Alabama\",abbreviation:\"AL\"},{name:\"Alaska\",abbreviation:\"AK\"},{name:\"American Samoa\",abbreviation:\"AS\"},{name:\"Arizona\",abbreviation:\"AZ\"},{name:\"Arkansas\",abbreviation:\"AR\"},{name:\"Armed Forces Europe\",abbreviation:\"AE\"},{name:\"Armed Forces Pacific\",abbreviation:\"AP\"},{name:\"Armed Forces the Americas\",abbreviation:\"AA\"},{name:\"California\",abbreviation:\"CA\"},{name:\"Colorado\",abbreviation:\"CO\"},{name:\"Connecticut\",abbreviation:\"CT\"},{name:\"Delaware\",abbreviation:\"DE\"},{name:\"District of Columbia\",abbreviation:\"DC\"},{name:\"Federated States of Micronesia\",abbreviation:\"FM\"},{name:\"Florida\",abbreviation:\"FL\"},{name:\"Georgia\",abbreviation:\"GA\"},{name:\"Guam\",abbreviation:\"GU\"},{name:\"Hawaii\",abbreviation:\"HI\"},{name:\"Idaho\",abbreviation:\"ID\"},{name:\"Illinois\",abbreviation:\"IL\"},{name:\"Indiana\",abbreviation:\"IN\"},{name:\"Iowa\",abbreviation:\"IA\"},{name:\"Kansas\",abbreviation:\"KS\"},{name:\"Kentucky\",abbreviation:\"KY\"},{name:\"Louisiana\",abbreviation:\"LA\"},{name:\"Maine\",abbreviation:\"ME\"},{name:\"Marshall Islands\",abbreviation:\"MH\"},{name:\"Maryland\",abbreviation:\"MD\"},{name:\"Massachusetts\",abbreviation:\"MA\"},{name:\"Michigan\",abbreviation:\"MI\"},{name:\"Minnesota\",abbreviation:\"MN\"},{name:\"Mississippi\",abbreviation:\"MS\"},{name:\"Missouri\",abbreviation:\"MO\"},{name:\"Montana\",abbreviation:\"MT\"},{name:\"Nebraska\",abbreviation:\"NE\"},{name:\"Nevada\",abbreviation:\"NV\"},{name:\"New Hampshire\",abbreviation:\"NH\"},{name:\"New Jersey\",abbreviation:\"NJ\"},{name:\"New Mexico\",abbreviation:\"NM\"},{name:\"New York\",abbreviation:\"NY\"},{name:\"North Carolina\",abbreviation:\"NC\"},{name:\"North Dakota\",abbreviation:\"ND\"},{name:\"Northern Mariana Islands\",abbreviation:\"MP\"},{name:\"Ohio\",abbreviation:\"OH\"},{name:\"Oklahoma\",abbreviation:\"OK\"},{name:\"Oregon\",abbreviation:\"OR\"},{name:\"Pennsylvania\",abbreviation:\"PA\"},{name:\"Puerto Rico\",abbreviation:\"PR\"},{name:\"Rhode Island\",abbreviation:\"RI\"},{name:\"South Carolina\",abbreviation:\"SC\"},{name:\"South Dakota\",abbreviation:\"SD\"},{name:\"Tennessee\",abbreviation:\"TN\"},{name:\"Texas\",abbreviation:\"TX\"},{name:\"Utah\",abbreviation:\"UT\"},{name:\"Vermont\",abbreviation:\"VT\"},{name:\"Virgin Islands, U.S.\",abbreviation:\"VI\"},{name:\"Virginia\",abbreviation:\"VA\"},{name:\"Washington\",abbreviation:\"WA\"},{name:\"West Virginia\",abbreviation:\"WV\"},{name:\"Wisconsin\",abbreviation:\"WI\"},{name:\"Wyoming\",abbreviation:\"WY\"}]},u.prototype.street=function(e){e=a(e);var t=this.word({syllables:2});return t=this.capitalize(t),t+=\" \",t+=e.short_suffix?this.street_suffix().abbreviation:this.street_suffix().name,t},u.prototype.street_suffix=function(){return this.pick(this.street_suffixes())},u.prototype.street_suffixes=function(){return[{name:\"Avenue\",abbreviation:\"Ave\"},{name:\"Boulevard\",abbreviation:\"Blvd\"},{name:\"Center\",abbreviation:\"Ctr\"},{name:\"Circle\",abbreviation:\"Cir\"},{name:\"Court\",abbreviation:\"Ct\"},{name:\"Drive\",abbreviation:\"Dr\"},{name:\"Extension\",abbreviation:\"Ext\"},{name:\"Glen\",abbreviation:\"Gln\"},{name:\"Grove\",abbreviation:\"Grv\"},{name:\"Heights\",abbreviation:\"Hts\"},{name:\"Highway\",abbreviation:\"Hwy\"},{name:\"Junction\",abbreviation:\"Jct\"},{name:\"Key\",abbreviation:\"Key\"},{name:\"Lane\",abbreviation:\"Ln\"},{name:\"Loop\",abbreviation:\"Loop\"},{name:\"Manor\",abbreviation:\"Mnr\"},{name:\"Mill\",abbreviation:\"Mill\"},{name:\"Park\",abbreviation:\"Park\"},{name:\"Parkway\",abbreviation:\"Pkwy\"},{name:\"Pass\",abbreviation:\"Pass\"},{name:\"Path\",abbreviation:\"Path\"},{name:\"Pike\",abbreviation:\"Pike\"},{name:\"Place\",abbreviation:\"Pl\"},{name:\"Plaza\",abbreviation:\"Plz\"},{name:\"Point\",abbreviation:\"Pt\"},{name:\"Ridge\",abbreviation:\"Rdg\"},{name:\"River\",abbreviation:\"Riv\"},{name:\"Road\",abbreviation:\"Rd\"},{name:\"Square\",abbreviation:\"Sq\"},{name:\"Street\",abbreviation:\"St\"},{name:\"Terrace\",abbreviation:\"Ter\"},{name:\"Trail\",abbreviation:\"Trl\"},{name:\"Turnpike\",abbreviation:\"Tpke\"},{name:\"View\",abbreviation:\"Vw\"},{name:\"Way\",abbreviation:\"Way\"}]},u.prototype.tv=function(e){return this.radio(e)},u.prototype.zip=function(e){var t=\"\";for(var n=0;n<5;n++)t+=this.natural({max:9}).toString();if(e&&e.plusfour===!0){t+=\"-\";for(n=0;n<4;n++)t+=this.natural({max:9}).toString()}return t},u.prototype.ampm=function(){return this.bool()?\"am\":\"pm\"},u.prototype.date=function(e){var t=this.month({raw:!0}),n;e=a(e,{year:parseInt(this.year(),10),month:t.numeric-1,day:this.natural({min:1,max:t.days}),hour:this.hour(),minute:this.minute(),second:this.second(),millisecond:this.millisecond(),american:!0,string:!1});var r=new Date(e.year,e.month,e.day,e.hour,e.minute,e.second,e.millisecond);return e.american?n=r.getMonth()+1+\"/\"+r.getDate()+\"/\"+r.getFullYear():n=r.getDate()+\"/\"+(r.getMonth()+1)+\"/\"+r.getFullYear(),e.string?n:r},u.prototype.hammertime=function(e){return this.date(e).getTime()},u.prototype.hour=function(e){e=a(e);var t=e.twentyfour?24:12;return this.natural({min:1,max:t})},u.prototype.millisecond=function(){return this.natural({max:999})},u.prototype.minute=u.prototype.second=function(){return this.natural({max:59})},u.prototype.month=function(e){e=a(e);var t=this.pick(this.months());return e.raw?t:t.name},u.prototype.months=function(){return[{name:\"January\",short_name:\"Jan\",numeric:\"01\",days:31},{name:\"February\",short_name:\"Feb\",numeric:\"02\",days:28},{name:\"March\",short_name:\"Mar\",numeric:\"03\",days:31},{name:\"April\",short_name:\"Apr\",numeric:\"04\",days:30},{name:\"May\",short_name:\"May\",numeric:\"05\",days:31},{name:\"June\",short_name:\"Jun\",numeric:\"06\",days:30},{name:\"July\",short_name:\"Jul\",numeric:\"07\",days:31},{name:\"August\",short_name:\"Aug\",numeric:\"08\",days:31},{name:\"September\",short_name:\"Sep\",numeric:\"09\",days:30},{name:\"October\",short_name:\"Oct\",numeric:\"10\",days:31},{name:\"November\",short_name:\"Nov\",numeric:\"11\",days:30},{name:\"December\",short_name:\"Dec\",numeric:\"12\",days:31}]},u.prototype.second=function(){return this.natural({max:59})},u.prototype.timestamp=function(){return this.natural({min:1,max:parseInt((new Date).getTime()/1e3,10)})},u.prototype.year=function(e){return e=a(e,{min:(new Date).getFullYear()}),e.max=typeof e.max!=\"undefined\"?e.max:e.min+100,this.natural(e).toString()},u.prototype.cc=function(e){e=a(e);var t,n,r,i;t=e.type?this.cc_type({name:e.type,raw:!0}):this.cc_type({raw:!0}),n=t.prefix.split(\"\"),r=t.length-t.prefix.length-1;for(var s=0;s<r;s++)n.push(this.integer({min:0,max:9}));return n.push(this.luhn_calculate(n.join(\"\"))),n.join(\"\")},u.prototype.cc_types=function(){return[{name:\"American Express\",short_name:\"amex\",prefix:\"34\",length:15},{name:\"Bankcard\",short_name:\"bankcard\",prefix:\"5610\",length:16},{name:\"China UnionPay\",short_name:\"chinaunion\",prefix:\"62\",length:16},{name:\"Diners Club Carte Blanche\",short_name:\"dccarte\",prefix:\"300\",length:14},{name:\"Diners Club enRoute\",short_name:\"dcenroute\",prefix:\"2014\",length:15},{name:\"Diners Club International\",short_name:\"dcintl\",prefix:\"36\",length:14},{name:\"Diners Club United States & Canada\",short_name:\"dcusc\",prefix:\"54\",length:16},{name:\"Discover Card\",short_name:\"discover\",prefix:\"6011\",length:16},{name:\"InstaPayment\",short_name:\"instapay\",prefix:\"637\",length:16},{name:\"JCB\",short_name:\"jcb\",prefix:\"3528\",length:16},{name:\"Laser\",short_name:\"laser\",prefix:\"6304\",length:16},{name:\"Maestro\",short_name:\"maestro\",prefix:\"5018\",length:16},{name:\"Mastercard\",short_name:\"mc\",prefix:\"51\",length:16},{name:\"Solo\",short_name:\"solo\",prefix:\"6334\",length:16},{name:\"Switch\",short_name:\"switch\",prefix:\"4903\",length:16},{name:\"Visa\",short_name:\"visa\",prefix:\"4\",length:16},{name:\"Visa Electron\",short_name:\"electron\",prefix:\"4026\",length:16}]},u.prototype.cc_type=function(e){e=a(e);var t=this.cc_types(),n=null;if(e.name){for(var r=0;r<t.length;r++)if(t[r].name===e.name||t[r].short_name===e.name){n=t[r];break}if(n===null)throw new Error(\"Credit card type '\"+e.name+\"'' is not suppoted\")}else n=this.pick(t);return e.raw?n:n.name},u.prototype.dollar=function(e){e=a(e,{max:1e4,min:0});var t=this.floating({min:e.min,max:e.max,fixed:2}).toString(),n=t.split(\".\")[1];return n===undefined?t+=\".00\":n.length<2&&(t+=\"0\"),t<0?\"-$\"+t.replace(\"-\",\"\"):\"$\"+t},u.prototype.exp=function(e){e=a(e);var t={};return t.year=this.exp_year(),t.year===(new Date).getFullYear()?t.month=this.exp_month({future:!0}):t.month=this.exp_month(),e.raw?t:t.month+\"/\"+t.year},u.prototype.exp_month=function(e){e=a(e);var t,n;if(e.future){do t=this.month({raw:!0}).numeric,n=parseInt(t,10);while(n<(new Date).getMonth())}else t=this.month({raw:!0}).numeric;return t},u.prototype.exp_year=function(){return this.year({max:(new Date).getFullYear()+10})},u.prototype.d4=function(){return this.natural({min:1,max:4})},u.prototype.d6=function(){return this.natural({min:1,max:6})},u.prototype.d8=function(){return this.natural({min:1,max:8})},u.prototype.d10=function(){return this.natural({min:1,max:10})},u.prototype.d12=function(){return this.natural({min:1,max:12})},u.prototype.d20=function(){return this.natural({min:1,max:20})},u.prototype.d30=function(){return this.natural({min:1,max:30})},u.prototype.d100=function(){return this.natural({min:1,max:100})},u.prototype.rpg=function(e,t){t=a(t);if(e===null)throw new Error(\"A type of die roll must be included\");var n=e.toLowerCase().split(\"d\"),r=[];if(n.length!==2||!parseInt(n[0],10)||!parseInt(n[1],10))throw new Error(\"Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die\");for(var i=n[0];i>0;i--)r[i-1]=this.natural({min:1,max:n[1]});return typeof t.sum!=\"undefined\"&&t.sum?r.reduce(function(e,t){return e+t}):r},u.prototype.guid=function(e){e=e||{version:5};var t=\"ABCDEF1234567890\",n=\"AB89\",r=this.string({pool:t,length:8})+\"-\"+this.string({pool:t,length:4})+\"-\"+e.version+this.string({pool:t,length:3})+\"-\"+this.string({pool:n,length:1})+this.string({pool:t,length:3})+\"-\"+this.string({pool:t,length:12});return r},u.prototype.hash=function(e){e=a(e,{length:40,casing:\"lower\"});var t=e.casing===\"upper\"?o.toUpperCase():o;return this.string({pool:t,length:e.length})},u.prototype.luhn_check=function(e){var t=e.toString(),n=+t.substring(t.length-1);return n===this.luhn_calculate(+t.substring(0,t.length-1))},u.prototype.luhn_calculate=function(e){var t=e.toString().split(\"\").reverse(),n=0;for(var r=0,i=t.length;i>r;++r){var s=+t[r];r%2===0&&(s*=2,s>9&&(s-=9)),n+=s}return n*9%10},u.prototype.mersenne_twister=function(e){return new h(e)},u.prototype.VERSION=\"0.5.4\";var h=function(e){e===undefined&&(e=(new Date).getTime()),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(e)};h.prototype.init_genrand=function(e){this.mt[0]=e>>>0;for(this.mti=1;this.mti<this.N;this.mti++)e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30,this.mt[this.mti]=(((e&4294901760)>>>16)*1812433253<<16)+(e&65535)*1812433253+this.mti,this.mt[this.mti]>>>=0},h.prototype.init_by_array=function(e,t){var n=1,r=0,i,s;this.init_genrand(19650218),i=this.N>t?this.N:t;for(;i;i--)s=this.mt[n-1]^this.mt[n-1]>>>30,this.mt[n]=(this.mt[n]^(((s&4294901760)>>>16)*1664525<<16)+(s&65535)*1664525)+e[r]+r,this.mt[n]>>>=0,n++,r++,n>=this.N&&(this.mt[0]=this.mt[this.N-1],n=1),r>=t&&(r=0);for(i=this.N-1;i;i--)s=this.mt[n-1]^this.mt[n-1]>>>30,this.mt[n]=(this.mt[n]^(((s&4294901760)>>>16)*1566083941<<16)+(s&65535)*1566083941)-n,this.mt[n]>>>=0,n++,n>=this.N&&(this.mt[0]=this.mt[this.N-1],n=1);this.mt[0]=2147483648},h.prototype.genrand_int32=function(){var e,t=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var n;this.mti===this.N+1&&this.init_genrand(5489);for(n=0;n<this.N-this.M;n++)e=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+this.M]^e>>>1^t[e&1];for(;n<this.N-1;n++)e=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+(this.M-this.N)]^e>>>1^t[e&1];e=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^e>>>1^t[e&1],this.mti=0}return e=this.mt[this.mti++],e^=e>>>11,e^=e<<7&2636928640,e^=e<<15&4022730752,e^=e>>>18,e>>>0},h.prototype.genrand_int31=function(){return this.genrand_int32()>>>1},h.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},h.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},h.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},h.prototype.genrand_res53=function(){var e=this.genrand_int32()>>>5,t=this.genrand_int32()>>>6;return(e*67108864+t)*(1/9007199254740992)},typeof exports!=\"undefined\"&&(typeof module!=\"undefined\"&&module.exports&&(exports=module.exports=u),exports.Chance=u),typeof n==\"function\"&&n.amd&&n(\"vendor/chance\",[],function(){return u}),typeof window==\"object\"&&typeof window.document==\"object\"&&(window.Chance=u,window.chance=new u)}(),n(\"utils/configurable\",[\"require\"],function(e){function t(e,t){for(var n in t)(function(n){e[n]=function(r){return arguments.length?(t[n]=r,e):t[n]}})(n)}return t}),n(\"species/clicker\",[\"require\",\"../utils/configurable\",\"../vendor/chance\"],function(e){var t=e(\"../utils/configurable\"),n=e(\"../vendor/chance\");return function(){function f(){var t,n,r,i,s=0;do{t=a.positionSelector(),n=t[0],r=t[1],i=e.elementFromPoint(n,r),s++;if(s>a.maxNbTries)return!1}while(!i||!a.canClick(i));var o=e.createEvent(\"MouseEvents\"),u=a.randomizer.pick(a.clickTypes);o.initMouseEvent(u,!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null),i.dispatchEvent(o),typeof a.showAction==\"function\"&&a.showAction(n,r,u),typeof a.logger.log==\"function\"&&a.logger.log(\"gremlin\",\"clicker   \",u,\"at\",n,r)}var e=window.document,r=e.body,i=[\"click\",\"click\",\"click\",\"click\",\"click\",\"click\",\"dblclick\",\"dblclick\",\"mousedown\",\"mouseup\",\"mouseover\",\"mouseover\",\"mouseover\",\"mousemove\",\"mouseout\"],s=function(){return[a.randomizer.natural({max:e.documentElement.clientWidth-1}),a.randomizer.natural({max:e.documentElement.clientHeight-1})]},o=function(t,n){var i=e.createElement(\"div\");i.style.border=\"3px solid red\",i.style[\"border-radius\"]=\"50%\",i.style.width=\"40px\",i.style.height=\"40px\",i.style[\"box-sizing\"]=\"border-box\",i.style.position=\"absolute\",i.style.webkitTransition=\"opacity 1s ease-out\",i.style.mozTransition=\"opacity 1s ease-out\",i.style.transition=\"opacity 1s ease-out\",i.style.left=t-20+\"px\",i.style.top=n-20+\"px\";var s=r.appendChild(i);setTimeout(function(){r.removeChild(s)},1e3),setTimeout(function(){s.style.opacity=0},50)},u=function(){return!0},a={clickTypes:i,positionSelector:s,showAction:o,canClick:u,maxNbTries:10,logger:{},randomizer:new n};return t(f,a),f}}),n(\"species/formFiller\",[\"require\",\"../utils/configurable\",\"../vendor/chance\"],function(e){var t=e(\"../utils/configurable\"),n=e(\"../vendor/chance\");return function(){function u(){var t=[],n=d();for(var r in o.elementMapTypes)o.elementMapTypes.hasOwnProperty(r)&&t.push(r);var i,s=0;do{var u=e.querySelectorAll(t.join(\",\"));if(u.length===0)return!1;i=o.randomizer.pick(u),s++;if(s>o.maxNbTries)return!1}while(!i||!o.canFillElement(i));var a=null;for(var f in o.elementMapTypes)if(i[n](f)){a=f;break}var l=o.elementMapTypes[a](i);typeof o.showAction==\"function\"&&o.showAction(i),typeof o.logger.log==\"function\"&&o.logger.log(\"gremlin\",\"formFiller\",\"input\",l,\"in\",i)}function a(e){var t=o.randomizer.character();return e.value+=t,t}function f(e){var t=o.randomizer.character({pool:\"0123456789\"});return e.value+=t,t}function l(e){var t=e.querySelectorAll(\"option\"),n=o.randomizer.pick(t);for(var r=0,i=t.length;r<i;r++){var s=t[r];s.selected=s.value==n.value}return n.value}function c(t){var n=e.createEvent(\"MouseEvents\");return n.initMouseEvent(\"click\",!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null),t.dispatchEvent(n),t.value}function h(t){var n=e.createEvent(\"MouseEvents\");return n.initMouseEvent(\"click\",!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null),t.dispatchEvent(n),t.value}function p(e){var t=o.randomizer.email();return e.value=t,t}function d(){var t=e.querySelector(\"body\");return(t.mozMatchesSelector||t.msMatchesSelector||t.oMatchesSelector||t.webkitMatchesSelector).name}var e=window.document,r={'input[type=\"text\"]':a,'input[type=\"password\"]':a,'input[type=\"number\"]':f,select:l,'input[type=\"radio\"]':c,'input[type=\"checkbox\"]':h,'input[type=\"email\"]':p,\"input:not([type])\":a},i=function(e){typeof e.attributes[\"data-old-border\"]==\"undefined\"&&(e.attributes[\"data-old-border\"]=e.style.border);var t=e.attributes[\"data-old-border\"];e.style.border=\"1px solid red\",setTimeout(function(){e.style.border=t},500)},s=function(){return!0},o={elementMapTypes:r,showAction:i,canFillElement:s,maxNbTries:10,logger:{},randomizer:new n};return t(u,o),u}}),n(\"species/scroller\",[\"require\",\"../utils/configurable\",\"../vendor/chance\"],function(e){var t=e(\"../utils/configurable\"),n=e(\"../vendor/chance\");return function(){function a(){var e=u.positionSelector(),t=e[0],n=e[1];window.scrollTo(t,n),typeof u.showAction==\"function\"&&u.showAction(t,n),typeof u.logger.log==\"function\"&&u.logger.log(\"gremlin\",\"scroller  \",\"scroll to\",t,n)}var e=window.document,r=e.documentElement,i=e.body,s=function(){var e=Math.max(i.scrollWidth,i.offsetWidth,r.scrollWidth,r.offsetWidth,r.clientWidth),t=Math.max(i.scrollHeight,i.offsetHeight,r.scrollHeight,r.offsetHeight,r.clientHeight);return[u.randomizer.natural({max:e-r.clientWidth}),u.randomizer.natural({max:t-r.clientHeight})]},o=function(t,n){var s=e.createElement(\"div\");s.style.border=\"3px solid red\",s.style.width=r.clientWidth-25+\"px\",s.style.height=r.clientHeight-25+\"px\",s.style.position=\"absolute\",s.style.webkitTransition=\"opacity 1s ease-out\",s.style.mozTransition=\"opacity 1s ease-out\",s.style.transition=\"opacity 1s ease-out\",s.style.left=t+10+\"px\",s.style.top=n+10+\"px\";var o=i.appendChild(s);setTimeout(function(){i.removeChild(o)},1e3),setTimeout(function(){o.style.opacity=0},50)},u={positionSelector:s,showAction:o,logger:{},randomizer:new n};return t(a,u),a}}),n(\"species/typer\",[\"require\",\"../utils/configurable\",\"../vendor/chance\"],function(e){var t=e(\"../utils/configurable\"),n=e(\"../vendor/chance\");return function(){function a(){var t=Math.max(i.scrollWidth,i.offsetWidth,r.scrollWidth,r.offsetWidth,r.clientWidth),n=Math.max(i.scrollHeight,i.offsetHeight,r.scrollHeight,r.offsetHeight,r.clientHeight),s=e.createEvent(\"KeyboardEvent\"),o=typeof s.initKeyboardEvent!=\"undefined\"?\"initKeyboardEvent\":\"initKeyEvent\",a=u.randomizer.natural({max:360}),f=u.randomizer.natural({max:r.clientWidth-1}),l=u.randomizer.natural({max:r.clientHeight-1}),c=e.elementFromPoint(f,l);s[o](u.randomizer.pick(u.eventTypes),!0,!0,c,!1,!1,!1,!1,a,0),c.dispatchEvent(s),typeof u.showAction==\"function\"&&u.showAction(c,f,l,a),typeof u.logger.log==\"function\"&&u.logger.log(\"gremlin\",\"typer       type\",a,\"at\",f,l)}var e=window.document,r=e.documentElement,i=e.body,s=[\"keypress\",\"keyup\",\"keydown\"],o=function(t,n,r,s){var o=e.createElement(\"div\");o.style.border=\"3px solid orange\",o.style[\"border-radius\"]=\"50%\",o.style.width=\"40px\",o.style.height=\"40px\",o.style[\"box-sizing\"]=\"border-box\",o.style.position=\"absolute\",o.style.webkitTransition=\"opacity 1s ease-out\",o.style.mozTransition=\"opacity 1s ease-out\",o.style.transition=\"opacity 1s ease-out\",o.style.left=n+\"px\",o.style.top=r+\"px\",o.style.textAlign=\"center\",o.style.paddingTop=\"7px\",o.innerHTML=String.fromCharCode(s);var u=i.appendChild(o);setTimeout(function(){i.removeChild(u)},1e3),setTimeout(function(){u.style.opacity=0},50)},u={eventTypes:s,showAction:o,logger:{},randomizer:new n};return t(a,u),a}}),n(\"mogwais/alert\",[\"require\",\"../utils/configurable\",\"../vendor/chance\"],function(e){var t=e(\"../utils/configurable\"),n=e(\"../vendor/chance\");return function(){function l(){o.watchEvents.indexOf(\"alert\")!==-1&&(window.alert=function(e){o.logger.warn(\"mogwai \",\"alert     \",e,\"alert\")}),o.watchEvents.indexOf(\"confirm\")!==-1&&(window.confirm=function(e){o.confirmResponse(),o.logger.warn(\"mogwai \",\"alert     \",e,\"confirm\")}),o.watchEvents.indexOf(\"prompt\")!==-1&&(window.prompt=function(e){o.promptResponse(),o.logger.warn(\"mogwai \",\"alert     \",e,\"prompt\")})}var e=[\"alert\",\"confirm\",\"prompt\"],r=function(){return o.randomizer.bool()},i=function(){return o.randomizer.sentence()},s={warn:function(){}},o={watchEvents:e,confirmResponse:r,promptResponse:i,logger:s,randomizer:new n},u=window.alert,a=window.confirm,f=window.prompt;return l.cleanUp=function(){return window.alert=u,window.confirm=a,window.prompt=f,l},t(l,o),l}}),n(\"mogwais/fps\",[\"require\",\"../utils/configurable\"],function(e){var t=e(\"../utils/configurable\");return function(){function o(e){e-i>r.delay&&(u(e),i=e);if(!s)return;window.requestAnimationFrame(o)}function u(){function t(t){e=t,window.requestAnimationFrame(n)}function n(t){var n=t-e<16?60:1e3/(t-e),i=r.levelSelector(n);r.logger[i](\"mogwai \",\"fps       \",n)}var e;window.requestAnimationFrame(t)}function a(){s=!0,window.requestAnimationFrame(o)}var e={log:function(){},warn:function(){},error:function(){}},n=function(e){return e<10?\"error\":e<20?\"warn\":\"log\"},r={delay:500,levelSelector:n,logger:e},i=-Infinity,s;return a.cleanUp=function(){return s=!1,a},t(a,r),a}}),n(\"mogwais/gizmo\",[\"require\",\"../utils/configurable\"],function(e){var t=e(\"../utils/configurable\");return function(){function s(){function s(){e++,e==n.maxErrors&&(t.stop(),window.setTimeout(function(){n.logger.warn(\"mogwai \",\"gizmo     \",\"stopped test execution after \",n.maxErrors,\"errors\")},4))}var e=0,t=this;r=window.onerror,window.onerror=function(e,t,n){return s(),r?r(e,t,n):!1},i=n.logger.error,n.logger.error=function(){s(),i.apply(n.logger,arguments)}}var e={warn:function(){}},n={maxErrors:10,logger:e},r,i;return s.cleanUp=function(){return window.onerror=r,n.logger.error=i.bind(n.logger),s},t(s,n),s}}),n(\"utils/executeInSeries\",[\"require\"],function(e){function t(e,t,n,r){var i=t.length;e=e.slice(0);var s=function(e,t){if(!e.length)return typeof r==\"function\"?r():!0;var o=e.shift();o.apply(n,t),o.length===i&&s(e,t,r)};t.push(function(){s(e,t,r)}),s(e,t,r)}return t}),n(\"strategies/allTogether\",[\"require\",\"../utils/executeInSeries\",\"../utils/configurable\"],function(e){var t=e(\"../utils/executeInSeries\"),n=e(\"../utils/configurable\");return function(){function s(n,s,u){function l(e){t(n,[],f,e)}function c(t){if(r)return;if(t>=a)return o();l(function(){setTimeout(function(){c(++t)},e.delay)})}var a=s&&s.nb?s.nb:e.nb,f=this;r=!1,i=u,c(0)}function o(){typeof i==\"function\"&&i(),i=null}var e={delay:10,nb:100},r,i;return s.stop=function(){r=!0,setTimeout(o,4)},n(s,e),s}}),n(\"strategies/bySpecies\",[\"require\",\"../utils/executeInSeries\",\"../utils/configurable\"],function(e){var t=e(\"../utils/executeInSeries\"),n=e(\"../utils/configurable\");return function(){function s(n,s,u){function l(n,i,s){if(r)return;if(i>=a)return s();t([n],[],f,function(){setTimeout(function(){l(n,++i,s)},e.delay)})}function c(){if(r)return;if(n.length===0)return o();l(n.shift(),0,c)}var a=s&&s.nb?s.nb:e.nb,n=n.slice(0),f=this;r=!1,i=u,c()}function o(){typeof i==\"function\"&&i(),i=null}var e={delay:10,nb:100},r,i;return s.stop=function(){r=!0,setTimeout(o,4)},n(s,e),s}}),n(\"strategies/distribution\",[\"require\",\"../utils/executeInSeries\",\"../utils/configurable\",\"../vendor/chance\"],function(e){var t=e(\"../utils/executeInSeries\"),n=e(\"../utils/configurable\"),r=e(\"../vendor/chance\");return function(){function o(n,r,o){function p(r,s,o){if(i)return;if(s>=l)return f();t([r],[],h,function(){setTimeout(function(){p(a(n,c),++s,o)},e.delay)})}var l=r&&r.nb?r.nb:e.nb,n=n.slice(0),c=e.distribution.length===0?u(n):e.distribution,h=this;if(l===0)return o();i=!1,s=o,p(a(n,c),0,p)}function u(e){var t=e.length;if(t===0)return[];var n=[],r=1/t;for(var i=0;i<t;i++)n.push(r);return n}function a(t,n){var r=0,i=e.randomizer.floating({min:0,max:1});for(var s=0,o=t.length;s<o;s++){r+=n[s];if(i<=r)return t[s]}return function(){}}function f(){typeof s==\"function\"&&s(),s=null}var e={distribution:[],delay:10,nb:100,randomizer:new r},i,s;return o.stop=function(){i=!0,setTimeout(f,4)},n(o,e),o}}),n(\"main\",[\"require\",\"./vendor/chance\",\"./species/clicker\",\"./species/formFiller\",\"./species/scroller\",\"./species/typer\",\"./mogwais/alert\",\"./mogwais/fps\",\"./mogwais/gizmo\",\"./strategies/allTogether\",\"./strategies/bySpecies\",\"./strategies/distribution\",\"./utils/executeInSeries\"],function(e){function s(e,t){for(var n=0,r=t.length;n<r;n++)for(var i in e)typeof t[n][i]==\"function\"&&t[n][i](e[i])}var t=e(\"./vendor/chance\"),n={species:{clicker:e(\"./species/clicker\"),formFiller:e(\"./species/formFiller\"),scroller:e(\"./species/scroller\"),typer:e(\"./species/typer\")},mogwais:{alert:e(\"./mogwais/alert\"),fps:e(\"./mogwais/fps\"),gizmo:e(\"./mogwais/gizmo\")},strategies:{allTogether:e(\"./strategies/allTogether\"),bySpecies:e(\"./strategies/bySpecies\"),distribution:e(\"./strategies/distribution\")}},r=e(\"./utils/executeInSeries\"),i=function(){this._gremlins=[],this._mogwais=[],this._strategies=[],this._beforeCallbacks=[],this._afterCallbacks=[],this._logger=console,this._randomizer=new t};return i.prototype.gremlin=function(e){return this._gremlins.push(e),this},i.prototype.allGremlins=function(){for(var e in n.species)this.gremlin(n.species[e]());return this},i.prototype.mogwai=function(e){return this._mogwais.push(e),this},i.prototype.allMogwais=function(){for(var e in n.mogwais)this.mogwai(n.mogwais[e]());return this},i.prototype.strategy=function(e){return this._strategies.push(e),this},i.prototype.before=function(e){return this._beforeCallbacks.push(e),this},i.prototype.after=function(e){return this._afterCallbacks.push(e),this},i.prototype.logger=function(e){return arguments.length?(this._logger=e,this):this._logger},i.prototype.log=function(e){this._logger.log(e)},i.prototype.randomizer=function(e){return arguments.length?(this._randomizer=e,this):this._randomizer},i.prototype.seed=function(e){return this._randomizer=new t(e),this},i.prototype.unleash=function(e,t){this._gremlins.length===0&&this.allGremlins(),this._mogwais.length===0&&this.allMogwais(),this._strategies.length===0&&this.strategy(n.strategies.distribution());var i=[].concat(this._gremlins,this._mogwais),o=i.concat(this._strategies,this._beforeCallbacks,this._afterCallbacks);s({logger:this._logger,randomizer:this._randomizer},o);var u=this._beforeCallbacks;u=u.concat(this._mogwais);var a=this._afterCallbacks;for(var f=0,l=i.length;f<l;f++)typeof i[f].cleanUp==\"function\"&&a.push(i[f].cleanUp);var c=this;r(u,[],c,function(){r(c._strategies,[c._gremlins,e],c,function(){r(a,[],c,function(){typeof t==\"function\"&&t()})})})},i.prototype.stop=function(){var e=this._strategies;for(var t=0,n=e.length;t<n;t++)e[t].stop()},n.createHorde=function(){return new i},n}),t([\"main\"]),t(\"main\")});","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/main.js":"/**\n * gremlins.js 0.1.0 Copyright (c) 2014, marmelab\n * Available via the MIT license.\n * see: http://github.com/marmelab/gremlins.js for details\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var Chance = require('./vendor/chance');\n\n    var gremlins = {\n        species: {\n            clicker:    require('./species/clicker'),\n            formFiller: require('./species/formFiller'),\n            scroller:   require('./species/scroller'),\n            typer:      require('./species/typer')\n        },\n        mogwais: {\n            alert:      require('./mogwais/alert'),\n            fps:        require('./mogwais/fps'),\n            gizmo:      require('./mogwais/gizmo')\n        },\n        strategies: {\n            allTogether:  require('./strategies/allTogether'),\n            bySpecies:    require('./strategies/bySpecies'),\n            distribution: require('./strategies/distribution')\n        }\n    };\n\n    var executeInSeries = require('./utils/executeInSeries');\n\n    var GremlinsHorde = function() {\n        this._gremlins = [];\n        this._mogwais = [];\n        this._strategies = [];\n        this._beforeCallbacks = [];\n        this._afterCallbacks = [];\n        this._logger = console; // logs to console by default\n        this._randomizer = new Chance();\n    };\n\n    /**\n     * Add a gremlin to the horde.\n     *\n     * A gremlin is nothing more than a function. Gremlins mess up with the\n     * application in order to test its robustness. Once unleased, the horde\n     * executes each gremlin function several times (see unleash()).\n     *\n     *   horde.gremlin(function() {\n     *     // do nasty things to the application\n     *   });\n     * \n     * The gremlins object contains a few gremlin species than you can add:\n     *\n     *   horde.gremlin(gremlins.species.clicker());\n     *\n     * A gremlin can be asynchronous if it takes an argument, which means that\n     * the horde is paused until the argument is executed.\n     *\n     *   horde.gremlin(function(done) {\n     *     // do nasty things to the application asynchronously\n     *     done();\n     *   });\n     *\n     * If the gremlin provides a logger() function, the horde logger object is\n     * injected, to allow the gremlin to record activity.\n     *\n     *\n     * If the gremlin provides a randomizer() function, the horde randomizer\n     * object is injected, to allow the gremlin to generate random data in a\n     * repeatable way.\n     *\n     * Here is a more sophisticated gremlin function example:\n     *\n     *   var logger;\n     *   function arrayDestroyer() {\n     *     Array.prototype.indexOf = function() { return 42; };\n     *     if (logger && logger.log) {\n     *       logger.log('All arrays are now equal');\n     *     }\n     *   });\n     *   arrayDestroyer.logger = function(loggerObject) {\n     *     logger = loggerObject;\n     *   };\n     *   horde.gremlin(arrayDestroyer);\n     *\n     * Gremlin functions are executed in the context of the horde, however it\n     * is a good practice to avoid using \"this\" inside gremlin functions to\n     * allow standalone gremlin execution, and to ease debugging.\n     *\n     *   horde.gremlin(function() {\n     *     var oldIndexOf = Array.prototype.indexOf;\n     *     Array.prototype.indexOf = function() { return 42; };\n     *     // \"this\" is the horde\n     *     this.after(function(){\n     *       array.prototype.indexOf = oldIndexOf;\n     *     });\n     *   });\n     *\n     * If a horde is unleashed without manually adding at least a single\n     * gremlin, all the default gremlin species are added (see allGremlins()).\n     *\n     * @param {Function} gremlin - A callback to be executed to mess up the app\n     * @return {GremlinsHorde}\n     */\n    GremlinsHorde.prototype.gremlin = function(gremlin) {\n        this._gremlins.push(gremlin);\n        return this;\n    };\n\n    /**\n     * Add all the registered gremlin species to the horde.\n     * \n     * The gremlin species are available in gremlins.species. You can add your\n     * own easily:\n     * \n     *   gremlins.species.greenMutant = function(logger) { //... };\n     *\n     * @return {GremlinsHorde}\n     */\n    GremlinsHorde.prototype.allGremlins = function() {\n        for (var gremlinName in gremlins.species) {\n            this.gremlin(gremlins.species[gremlinName]());\n        }\n        return this;\n    };\n\n    /**\n     * Add a mogwai to the horde.\n     *\n     * A mogwai is nothing more than a function. Mogwais monitor application\n     * activity in order to detect when gremlins do damages. Contrary to \n     * gremlins, mogwais should do no harm to the current application.\n     *\n     *   // this example mogwai monitors javascript alerts\n     *   horde.mogwai(function() {\n     *     var oldAlert = window.alert;\n     *     window.alert = function(message) {\n     *       // do stuff\n     *       oldAlert(message);\n     *     }      \n     *   });\n     *\n     * The gremlins object contains a few mogwai species than you can add:\n     *\n     *   horde.mogwai(gremlins.mogwais.alert());\n     * \n     * Mogwais are called once before the horde is unleashed. Just like a\n     * before() callback, a mogwai can be synchronous or asynchronous.\n     *\n     * What distinguishes a mogwai function from a simple before() function\n     * is that mogwai functions can provide a cleanUp() function to be called\n     * once after the gremlins finished their job.\n     * \n     * When added, if the mogwai provides a logger() function, the horde\n     * logger object is injected, to allow the mogwai to record activity.\n     *\n     * Here is a more sophisticated mogwai function example:\n     *\n     *   var oldAlert = window.alert;\n     *   var logger;\n     *   function alert() {\n     *     window.alert = function(message) {\n     *       oldAlert(message);\n     *       if (logger && logger.log) {\n     *         logger.log('alert', msg);\n     *       }\n     *     }      \n     *   });\n     *   alert.cleanUp = function() {\n     *     window.alert = oldAlert;\n     *   };\n     *   alert.logger = function(loggerObject) {\n     *     logger = loggerObject;\n     *   };\n     *   horde.mogwai(alert);\n     *\n     * The cleanUp() and logger() support for mogwais allow to build\n     * sophisticated monitoring features without using \"this\", and make\n     * the mogwais portable and testable.\n     *\n     * If a horde is unleashed without manually adding at least a single\n     * mogwai, all the default mogwai species are added (see allMogwais()).\n     *\n     * If you want to disable default mogwais, just add an empty function.\n     *\n     *   horde.mogwai(function() {});\n     *\n     * @param {Function} mogwai - A callback to be executed when the test starts\n     * @return {GremlinsHorde}\n     */\n    GremlinsHorde.prototype.mogwai = function(mogwai) {\n        this._mogwais.push(mogwai);\n        return this;\n    };\n\n    /**\n     * Add all the registered mogwai species to the horde.\n     * \n     * The mogwai species are available in gremlins.mogwais. You can add your\n     * own easily:\n     * \n     *   gremlins.mogwais.gizmo = function() { //... };\n     *\n     * @return {GremlinsHorde}\n     */\n    GremlinsHorde.prototype.allMogwais = function() {\n        for (var mogwaiName in gremlins.mogwais) {\n            this.mogwai(gremlins.mogwais[mogwaiName]());\n        }\n        return this;\n    };\n\n    /**\n     * Add an attack strategy to run gremlins.\n     *\n     * A strategy is an asynchronous function taking the following arguments:\n     *  - gremlins: array of gremlin species added to the horde\n     *  - params: the parameters passed as first argument of unleash()\n     *  - done: a callback to execute once the strategy is finished\n     * \n     * A strategy function executes registered gremlins in a certain order,\n     * a certain number of times.\n     *\n     *   horde.strategy(function allAtOnceStrategy(gremlins, params, done) {\n     *     gremlins.forEach(function(gremlin) {\n     *       gremlin.apply(horde);\n     *     });\n     *     done();\n     *   });\n     *\n     * The gremlins object contains a few strategies than you can add:\n     *\n     *   horde.strategy(gremlins.strategies.bySpecies());\n     *\n     * You can add several strategies by calling strategy() more than once.\n     * They will be executed in the order they were registered.\n     *\n     * If a horde is unleashed without manually adding at least a single\n     * strategy, all the default strategy (allTogether) is used.\n     *\n     * @param {Function} strategy - A callback to be executed when the test starts\n     * @return {GremlinsHorde} \n     */\n    GremlinsHorde.prototype.strategy = function(strategy) {\n        this._strategies.push(strategy);\n        return this;\n    };\n\n    /**\n     * Add a callback to be executed before gremlins are unleashed.\n     *\n     * Use it to setup the page before the stress test (disable some features,\n     * set default data, bootstrap the application, start a profiler).\n     *\n     *   horde.before(function() {\n     *     console.profile('gremlins'); // start the Chrome profiler\n     *   });\n     * \n     * If the callback takes no argument, it is executed synchronously.\n     *\n     *   horde.before(function() {\n     *     // do things synchronously\n     *   });\n     *\n     * If the callback takes an argument, it is executed asynchronously, which\n     * means that the horde is paused until the argument is executed.\n     *\n     *   horde.before(function(done) {\n     *     // do things asynchronously\n     *     done();\n     *   });\n     *\n     * before() callbacks are executed in the context of the horde.\n     *\n     *   horde.before(function() {\n     *     // \"this\" is the horde\n     *     this.log('Preparing the attack');\n     *   });\n     *\n     * You can add several callbacks by calling before() more than once.\n     * They will be executed in the order they were registered.\n     *\n     * @param {Function} beforeCallback - A callback to be executed before the stress test\n     * @return {GremlinsHorde}\n     */\n    GremlinsHorde.prototype.before = function(beforeCallback) {\n        this._beforeCallbacks.push(beforeCallback);\n        return this;\n    };\n\n    /**\n     * Add a callback to be executed after gremlins finished their job.\n     *\n     * Use it to collect insights of the gremlins activity, stop a profiler,\n     * or re-enable features that were disabled for the test.\n     *\n     *   horde.after(function() {\n     *     console.profileEnd(); // stop the Chrome profiler\n     *   });\n     * \n     * If the callback takes no argument, it is executed synchronously.\n     *\n     *   horde.after(function() {\n     *     // do things synchronously\n     *   });\n     *\n     * If the callback takes an argument, it is executed asynchronously, which\n     * means that the horde is paused until the argument is executed.\n     *\n     *   horde.after(function(done) {\n     *     // do things asynchronously\n     *     done();\n     *   });\n     *\n     * after() callbacks are executed in the context of the horde.\n     *\n     *   horde.after(function() {\n     *     // \"this\" is the horde\n     *     this.log('Cleaning up the mess after the attack');\n     *   });\n     *\n     * You can add several callbacks by calling after() more than once.\n     * They will be executed in the order they were registered.\n     *\n     * @param {Function} afterCallback - A callback to be executed at the end of the stress test\n     * @return {GremlinsHorde}\n     */\n    GremlinsHorde.prototype.after = function(afterCallback) {\n        this._afterCallbacks.push(afterCallback);\n        return this;\n    };\n\n    /**\n     * Set the logger object to use for logging.\n     *\n     * When called with no parameter, return the current logger.\n     * \n     * The logger object must provide 4 functions: log, info, warn, and error.\n     * \n     *   var consoleLogger = {\n     *       log:   console.log.bind(console),\n     *       info:  console.info.bind(console),\n     *       warn:  console.warn.bind(console),\n     *       error: console.error.bind(console)\n     *   };\n     *   horde.logger(consoleLogger);\n     *\n     * The logger object is injected to mogwais, and to gremlins.\n     *\n     * By default, a horde uses the global console object as logger.\n     *\n     * @param {Object} [logger] - A logger object\n     * @return {GremlinsHorde}\n     */\n    GremlinsHorde.prototype.logger = function(logger) {\n        if (!arguments.length) return this._logger;\n        this._logger = logger;\n        return this;\n    };\n\n    /**\n     * Shortcut to the logger's log() method.\n     *\n     * Mostly useful for before() and after() callbacks. Only supports a\n     * single argument.\n     *\n     * @param {String} msg The message to log\n     */\n    GremlinsHorde.prototype.log = function(msg) {\n        this._logger.log(msg);\n    };\n\n    /**\n     * Set the randomizer object to use for generating random data.\n     *\n     * When called with no parameter, return the current randomizer.\n     *\n     * The randomizer object must be compatible with chance.js.\n     *\n     * The randomizer object is injected to mogwais, and to gremlins.\n     *\n     * By default, a horde uses a new Chance object as logger.\n     *\n     * @param {Object} [randomizer] - A randomizer object\n     * @return {GremlinsHorde}\n     */\n    GremlinsHorde.prototype.randomizer = function(randomizer) {\n        if (!arguments.length) return this._randomizer;\n        this._randomizer = randomizer;\n        return this;\n    };\n\n    /**\n     * Seed the random number generator\n     *\n     * Useful to generate repeatable random results actions.\n     *\n     * You can pass either an integer, or a random data generator callback\n     *\n     * @see Chance() constructor\n     */\n    GremlinsHorde.prototype.seed = function(seed) {\n        this._randomizer = new Chance(seed);\n        return this;\n    };\n\n    /**\n     * Start the stress test by executing gremlins according to the strategies\n     * \n     * Gremlins and mogwais do nothing until the horde is unleashed.\n     * When unleashing, you can pass parameters to the strategies, such as the\n     * number of gremlin waves in the default strategy.\n     *\n     *   horde.unleash({ nb: 50 }); // all gremlins will attack 50 times\n     * \n     * unleash() executes asynchronously, so you must use the second argument\n     * if you need to execute code after the stress test.\n     *\n     *   horde.unleash({}, function() {\n     *     console.log('Phew! Stress test is over.');\n     *   });\n     *\n     * Alternately, you can use the after() method.\n     *\n     *   horde\n     *     .after(function() {\n     *       console.log('Phew! Stress test is over.');\n     *     })\n     *     .unleash();\n     *\n     * @param {Object} [params] - A list of parameters passed to each strategy.\n     * @param {Function} [done] - A callback to be executed once the stress test is over\n     */\n    GremlinsHorde.prototype.unleash = function(params, done) {\n        if (this._gremlins.length === 0) {\n            this.allGremlins();\n        }\n        if (this._mogwais.length === 0) {\n            this.allMogwais();\n        }\n        if (this._strategies.length === 0) {\n            this.strategy(gremlins.strategies.distribution());\n        }\n\n        var gremlinsAndMogwais = [].concat(this._gremlins, this._mogwais);\n        var allCallbacks = gremlinsAndMogwais.concat(this._strategies, this._beforeCallbacks, this._afterCallbacks);\n        inject({'logger': this._logger, 'randomizer': this._randomizer}, allCallbacks);\n        var beforeCallbacks = this._beforeCallbacks;\n        beforeCallbacks = beforeCallbacks.concat(this._mogwais);\n        var afterCallbacks  = this._afterCallbacks;\n        for (var i = 0, count = gremlinsAndMogwais.length; i < count; i++) {\n            if (typeof gremlinsAndMogwais[i].cleanUp == 'function') {\n                afterCallbacks.push(gremlinsAndMogwais[i].cleanUp);\n            }\n        }\n\n        var horde = this;\n\n        executeInSeries(beforeCallbacks, [], horde, function() {\n            executeInSeries(horde._strategies, [horde._gremlins, params], horde, function() {\n                executeInSeries(afterCallbacks, [], horde, function () {\n                    if (typeof done === 'function') {\n                        done();\n                    }\n                });\n            });\n        });\n    };\n\n    function inject(services, objects) {\n        for (var i = 0, count = objects.length; i < count; i++) {\n            for (var name in services) {\n                if (typeof objects[i][name] === \"function\") {\n                    objects[i][name](services[name]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Stop a running test\n     *\n     * Delegate the stop message to all registered strategies. Calling\n     * this method before starting the test or after it is finished has\n     * no effect.\n     *\n     * stop() will only work properly if strategies implement their own stop()\n     * method.\n     */\n    GremlinsHorde.prototype.stop = function() {\n        var strategies = this._strategies;\n        for (var i = 0, count = strategies.length; i < count; i++) {\n            strategies[i].stop();\n        }\n    };\n\n    /**\n     * Get a new horde instance\n     *\n     * @return {GremlinsHorde}\n     */\n    gremlins.createHorde = function() {\n        return new GremlinsHorde();\n    };\n\n    return gremlins;\n\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/mogwais/alert.js":"/**\n * The alert mogwai answers calls to alert()\n *\n * The alert mogwai overrides window.alert, window.confirm, and window.prompt\n * to avoid stopping the stress test with blocking JavaScript calls. Instead\n * of displaying a dialog, these methods are simply replaced by a write in the\n * logger.\n *\n *   var alertMogwai = gremlins.mogwais.alert();\n *   horde.mogwai(alertMogwai);\n *\n * The alert mogwai can be customized as follows:\n *\n *   alertMogwai.watchEvents(['alert', 'confirm', 'prompt']); // select the events to catch\n *   alertMogwai.confirmResponse(function() { // what a call to confirm() should return });\n *   alertMogwai.promptResponse(function() { // what a call to prompt() should return });\n *   alertMogwai.logger(loggerObject); // inject a logger\n *   alertMogwai.randomizer(randomizerObject); // inject a randomizer\n *\n * Example usage:\n *\n *   horde.mogwai(gremlins.mogwais.alert()\n *     .watchEvents(['prompt'])\n *     .promptResponse(function() { return 'I typed garbage'; })\n *   );\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var configurable = require('../utils/configurable');\n    var Chance = require('../vendor/chance');\n\n    return function() {\n\n        var defaultWatchEvents = ['alert', 'confirm', 'prompt'];\n\n        var defaultConfirmResponse = function() {\n            // Random OK or cancel\n            return config.randomizer.bool();\n        };\n\n        var defaultPromptResponse = function() {\n            // Return a random string\n            return config.randomizer.sentence();\n        };\n\n        var defaultLogger = { warn: function() {} };\n\n        /**\n         * @mixin\n         */\n        var config = {\n            watchEvents:     defaultWatchEvents,\n            confirmResponse: defaultConfirmResponse,\n            promptResponse:  defaultPromptResponse,\n            logger:          defaultLogger,\n            randomizer:      new Chance()\n        };\n\n        var alert   = window.alert;\n        var confirm = window.confirm;\n        var prompt  = window.prompt;\n\n        /**\n         * @mixes config\n         */\n        function alertMogwai() {\n            if (config.watchEvents.indexOf('alert') !== -1) {\n                window.alert = function (msg) {\n                    config.logger.warn('mogwai ', 'alert     ', msg, 'alert');\n                };\n            }\n            if (config.watchEvents.indexOf('confirm') !== -1) {\n                window.confirm = function (msg) {\n                    config.confirmResponse();\n                    config.logger.warn('mogwai ', 'alert     ', msg, 'confirm');\n                };\n            }\n            if (config.watchEvents.indexOf('prompt') !== -1) {\n                window.prompt = function (msg) {\n                    config.promptResponse();\n                    config.logger.warn('mogwai ', 'alert     ', msg, 'prompt');\n                };\n            }\n        }\n\n        alertMogwai.cleanUp = function() {\n            window.alert   = alert;\n            window.confirm = confirm;\n            window.prompt  = prompt;\n            return alertMogwai;\n        };\n\n        configurable(alertMogwai, config);\n\n        return alertMogwai;\n    };\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/mogwais/fps.js":"/**\n * The fps mogwai logs the number of frames per seconds (FPS) of the browser\n * \n * The normal (and maximal) FPS rate is 60. It decreases when the browser is\n * busy refreshing the layout, or executing JavaScript.\n *\n * This mogwai logs with the error level once the FPS rate drops below 10.\n *\n *   var fpsMogwai = gremlins.mogwais.fps();\n *   horde.mogwai(fpsMogwai);\n *\n * The fps mogwai can be customized as follows:\n *\n *   fpsMogwai.delay(500); // the interval for FPS measurements\n *   fpsMogwai.levelSelector(function(fps) { // select logging level according to fps value });\n *   fpsMogwai.logger(loggerObject); // inject a logger\n *\n * Example usage:\n *\n *   horde.mogwai(gremlins.mogwais.fps()\n *     .delay(250)\n *     .levelSelector(function(fps) {\n *       if (fps < 5) return 'error';\n *       if (fps < 10) return 'warn';\n *       return 'log';\n *     })\n *   );\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var configurable = require('../utils/configurable');\n\n    return function() {\n\n        var defaultLogger = {\n            log: function() {},\n            warn: function() {},\n            error: function() {}\n        };\n\n        var defaultLevelSelector = function(fps) {\n            if (fps < 10) return 'error';\n            if (fps < 20) return 'warn';\n            return 'log';\n        };\n\n        /**\n         * @mixin\n         */\n        var config = {\n            delay: 500, // how often should the fps be measured\n            levelSelector: defaultLevelSelector,\n            logger: defaultLogger\n        };\n\n        var initialTime = -Infinity; // force initial measure\n        var enabled;\n\n        function loop(time) {\n            if ((time - initialTime) > config.delay) {\n                measureFPS(time);\n                initialTime = time;\n            }\n            if (!enabled) return;\n            window.requestAnimationFrame(loop);\n        }\n\n        function measureFPS() {\n            var lastTime;\n            function init(time) {\n                lastTime = time;\n                window.requestAnimationFrame(measure);\n            }\n            function measure(time) {\n                var fps = (time - lastTime < 16) ? 60 : 1000/(time - lastTime);\n                var level = config.levelSelector(fps);\n                config.logger[level]('mogwai ', 'fps       ', fps);\n            }\n            window.requestAnimationFrame(init);\n        }\n\n        /**\n         * @mixes config\n         */\n        function fpsMogwai() {\n            enabled = true;\n            window.requestAnimationFrame(loop);\n        }\n\n        fpsMogwai.cleanUp = function() {\n            enabled = false;\n            return fpsMogwai;\n        };\n\n        configurable(fpsMogwai, config);\n\n        return fpsMogwai;\n    };\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/mogwais/gizmo.js":"/**\n * Gizmo is a special mogwai who can stop the gremlins when they go too far\n *\n * The gizom mogwai monitors the JavaScript alerts and the calls to\n * console.alert(), and stops the stress test exectution once the number of\n * errors pass a certain treshold (10 errors by default).\n *\n *   var gizmoMogwai = gremlins.mogwais.gizmo();\n *   horde.mogwai(gizmoMogwai);\n *\n * The gizmo mogwai can be customized as follows:\n *\n *   gizmoMogwai.maxErrors(10); // the number of errors after which the test stops\n *   gizmoMogwai.logger(loggerObject); // inject a logger\n *\n * Example usage:\n *\n *   horde.mogwai(gremlins.mogwais.gizmo()\n *     .maxErrors(5)\n *   );\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var configurable = require('../utils/configurable');\n\n    return function() {\n\n        var defaultLogger = { warn: function() {} };\n\n        /**\n         * @mixin\n         */\n        var config = {\n            maxErrors: 10,\n            logger:    defaultLogger\n        };\n\n        var realOnError, realLoggerError;\n\n        /**\n         * @mixes config\n         */\n        function gizmoMogwai() {\n            var nbErrors = 0;\n            var horde = this; // this is exceptional - don't use 'this' for mogwais in general\n            function incrementNbErrors(){\n                nbErrors++;\n                if (nbErrors == config.maxErrors) {\n                    horde.stop();\n                    window.setTimeout(function() {\n                        // display the mogwai error after the caught error\n                        config.logger.warn('mogwai ', 'gizmo     ', 'stopped test execution after ', config.maxErrors, 'errors');\n                    }, 4);\n                }\n            }\n\n            // general JavaScript errors\n            realOnError = window.onerror;\n            window.onerror = function(message, url, linenumber) {\n                incrementNbErrors();\n                return realOnError ? realOnError(message, url, linenumber) : false;\n            };\n\n            // console (or logger) errors\n            realLoggerError = config.logger.error;\n            config.logger.error = function() {\n                incrementNbErrors();\n                realLoggerError.apply(config.logger, arguments);\n            };\n        }\n\n        gizmoMogwai.cleanUp = function() {\n            window.onerror = realOnError;\n            config.logger.error = realLoggerError.bind(config.logger);\n            return gizmoMogwai;\n        };\n\n        configurable(gizmoMogwai, config);\n\n        return gizmoMogwai;\n    };\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/species/clicker.js":"/**\n * The clicker gremlin clicks anywhere on the visible area of the document\n *\n * The clicker gremlin triggers mouse events (click, dblclick, mousedown,\n * mouseup, mouseover, mouseover, mouseover, mousemove, and mouseout) on \n * random targets displayed on the viewport.\n *\n * By default, the clicker gremlin activity is showed by a red circle.\n *\n *   var clickerGremlin = gremlins.species.clicker();\n *   horde.gremlin(clickerGremlin);\n *\n * The clicker gremlin can be customized as follows:\n *\n *   clickerGremlin.clickTypes(['click', 'mouseover']); // the mouse event types to trigger\n *   clickerGremlin.positionSelector(function() { // find a random pair of coordinates to click });\n *   clickerGremlin.showAction(function(x, y) { // show the gremlin activity on screen });\n *   clickerGremlin.canClick(function(element) { return true }); // to limit where the gremlin can click\n *   clickerGremlin.maxNbTries(5); // How many times the gremlin must look for a clickable element before quitting\n *   clickerGremlin.logger(loggerObject); // inject a logger\n *   clickerGremlin.randomizer(randomizerObject); // inject a randomizer\n *\n * Example usage:\n *\n *   horde.gremlin(gremlins.species.clicker()\n *     .clickTypes(['click'])\n *     .positionSelector(function() {\n *        // only click inside the foo element area\n *        var $el = $('#foo');\n *        var offset = $el.offset();\n *        return [\n *          parseInt(Math.random() * $el.outerWidth() + offset.left),\n *          parseInt(Math.random() * $el.outerHeight() + offset.top)\n *        ];\n *     })\n *     .canClick(function(element) {\n *       // only click elements in bar\n *       return $(element).parents('#bar').length;\n *       // when canClick returns false, the gremlin will look for another\n *       // element to click on until maxNbTries is reached\n *     })\n *     . showAction(function(x, y) {\n *       // do nothing (hide the gremlin action on screen)\n *     })\n *   );\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var configurable = require('../utils/configurable');\n    var Chance = require('../vendor/chance');\n\n    return function() {\n\n        var document = window.document,\n            body = document.body;\n\n        var defaultClickTypes = ['click', 'click', 'click', 'click', 'click', 'click', 'dblclick', 'dblclick', 'mousedown', 'mouseup', 'mouseover', 'mouseover', 'mouseover', 'mousemove', 'mouseout'];\n\n        var defaultPositionSelector = function() {\n            return [\n                config.randomizer.natural({ max: document.documentElement.clientWidth - 1 }),\n                config.randomizer.natural({ max: document.documentElement.clientHeight - 1 })\n            ];\n        };\n\n        var defaultShowAction = function(x, y) {\n            var clickSignal = document.createElement('div');\n            clickSignal.style.border = \"3px solid red\";\n            clickSignal.style['border-radius'] = '50%';\n            clickSignal.style.width = \"40px\";\n            clickSignal.style.height = \"40px\";\n            clickSignal.style['box-sizing'] = 'border-box';\n            clickSignal.style.position = \"absolute\";\n            clickSignal.style.webkitTransition = 'opacity 1s ease-out';\n            clickSignal.style.mozTransition = 'opacity 1s ease-out';\n            clickSignal.style.transition = 'opacity 1s ease-out';\n            clickSignal.style.left = (x - 20 ) + 'px';\n            clickSignal.style.top = (y - 20 )+ 'px';\n            var element = body.appendChild(clickSignal);\n            setTimeout(function() {\n                body.removeChild(element);\n            }, 1000);\n            setTimeout(function() {\n                element.style.opacity = 0;\n            }, 50);\n        };\n\n        var defaultCanClick = function() { return true; };\n\n        /**\n         * @mixin\n         */\n        var config = {\n            clickTypes:       defaultClickTypes,\n            positionSelector: defaultPositionSelector,\n            showAction:       defaultShowAction,\n            canClick:         defaultCanClick,\n            maxNbTries:       10,\n            logger:           {},\n            randomizer:       new Chance()\n        };\n\n        /**\n         * @mixes config\n         */\n        function clickerGremlin() {\n            var position, posX, posY, targetElement, nbTries = 0;\n            do {\n                position = config.positionSelector();\n                posX = position[0];\n                posY = position[1];\n                targetElement = document.elementFromPoint(posX, posY);\n                nbTries++;\n                if (nbTries > config.maxNbTries) return false;\n            } while (!targetElement || !config.canClick(targetElement));\n\n            var evt = document.createEvent(\"MouseEvents\");\n            var clickType = config.randomizer.pick(config.clickTypes);\n            evt.initMouseEvent(clickType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n            targetElement.dispatchEvent(evt);\n\n            if (typeof config.showAction == 'function') {\n                config.showAction(posX, posY, clickType);\n            }\n\n            if (typeof config.logger.log == 'function') {\n                config.logger.log('gremlin', 'clicker   ', clickType, 'at', posX, posY);\n            }\n        }\n\n        configurable(clickerGremlin, config);\n\n        return clickerGremlin;\n    };\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/species/formFiller.js":"/**\n * The formFiller gremlin fills forms by entering data, selecting options, clicking checkboxes, etc\n *\n * As much as possible, the form filling is done using mouse and keyboard\n * events, to trigger any listener bound to it.\n *\n * By default, the formFiller gremlin activity is showed by changing the \n * element border to solid red.\n *\n *   var formFillerGremlin = gremlins.species.formFiller();\n *   horde.gremlin(formFillerGremlin);\n *\n * The formFiller gremlin can be customized as follows:\n *\n *   formFillerGremlin.elementMapTypes({'select': function selectFiller(element) {} }); // form element filler functions\n *   formFillerGremlin.showAction(function(element) { // show the gremlin activity on screen });\n *   formFillerGremlin.canFillElement(function(element) { return true }); // to limit where the gremlin can fill\n *   formFillerGremlin.maxNbTries(5); // How many times the gremlin must look for a fillable element before quitting\n *   formFillerGremlin.logger(loggerObject); // inject a logger\n *   formFillerGremlin.randomizer(randomizerObject); // inject a randomizer\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var configurable = require('../utils/configurable');\n    var Chance = require('../vendor/chance');\n\n    return function() {\n\n        var document = window.document;\n\n        var defaultMapElements = {\n            'input[type=\"text\"]': fillTextElement,\n            'input[type=\"password\"]': fillTextElement,\n            'input[type=\"number\"]': fillNumberElement,\n            'select': fillSelect,\n            'input[type=\"radio\"]': fillRadio,\n            'input[type=\"checkbox\"]': fillCheckbox,\n            'input[type=\"email\"]': fillEmail,\n            'input:not([type])': fillTextElement\n        };\n\n        var defaultShowAction = function(element) {\n            if(typeof element.attributes['data-old-border'] === 'undefined') {\n                element.attributes['data-old-border'] = element.style.border;\n            }\n\n            var oldBorder = element.attributes['data-old-border'];\n            element.style.border = \"1px solid red\";\n\n            setTimeout(function() {\n                element.style.border = oldBorder;\n            }, 500);\n        };\n\n        var defaultCanFillElemment = function() { return true; };\n\n        /**\n         * @mixin\n         */\n        var config = {\n            elementMapTypes: defaultMapElements,\n            showAction:      defaultShowAction,\n            canFillElement:  defaultCanFillElemment,\n            maxNbTries:      10,\n            logger:          {},\n            randomizer:      new Chance()\n        };\n\n        /**\n         * @mixes config\n         */\n        function formFillerGremlin() {\n            // Retrieve all selectors\n            var elementTypes = [],\n                matchFunction = getMatchFunctionName();\n\n            for(var key in config.elementMapTypes) {\n                if(config.elementMapTypes.hasOwnProperty(key)) {\n                    elementTypes.push(key);\n                }\n            }\n\n            var element, nbTries = 0;\n\n            do {\n                // Find a random element within all selectors\n                var elements = document.querySelectorAll(elementTypes.join(','));\n                if (elements.length === 0) return false;\n                element = config.randomizer.pick(elements);\n                nbTries++;\n                if (nbTries > config.maxNbTries) return false;\n            } while (!element || !config.canFillElement(element));\n\n            // Retrieve element type\n            var elementType = null;\n            for (var selector in config.elementMapTypes) {\n                if (element[matchFunction](selector)) {\n                    elementType = selector;\n                    break;\n                }\n            }\n\n            var character = config.elementMapTypes[elementType](element);\n\n            if (typeof config.showAction == 'function') {\n                config.showAction(element);\n            }\n\n            if (typeof config.logger.log == 'function') {\n                config.logger.log('gremlin', 'formFiller', 'input', character, 'in', element);\n            }\n        }\n\n        function fillTextElement(element) {\n            var character = config.randomizer.character();\n            element.value += character;\n\n            return character;\n        }\n\n        function fillNumberElement(element) {\n            var number = config.randomizer.character({pool: '0123456789'});\n            element.value += number;\n\n            return number;\n        }\n\n        function fillSelect(element) {\n            var options = element.querySelectorAll('option');\n            var randomOption = config.randomizer.pick(options);\n\n            for (var i = 0, c = options.length; i < c; i++) {\n                var option = options[i];\n                option.selected = option.value == randomOption.value;\n            }\n\n            return randomOption.value;\n        }\n\n        function fillRadio(element) {\n            // using mouse events to trigger listeners\n            var evt = document.createEvent(\"MouseEvents\");\n            evt.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n            element.dispatchEvent(evt);\n\n            return element.value;\n        }\n\n        function fillCheckbox(element) {\n            // using mouse events to trigger listeners\n            var evt = document.createEvent(\"MouseEvents\");\n            evt.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n            element.dispatchEvent(evt);\n\n            return element.value;\n        }\n\n        function fillEmail(element) {\n            var email = config.randomizer.email();\n            element.value = email;\n\n            return email;\n        }\n\n        function getMatchFunctionName() {\n            var el = document.querySelector('body');\n            return ( el.mozMatchesSelector || el.msMatchesSelector ||\n                el.oMatchesSelector   || el.webkitMatchesSelector).name;\n        }\n\n        configurable(formFillerGremlin, config);\n\n        return formFillerGremlin;\n    };\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/species/scroller.js":"/**\n * The scroller gremlin scrolls the viewport to reveal another part of the document\n *\n *   var scrollerGremlin = gremlins.species.scroller();\n *   horde.gremlin(scrollerGremlin);\n *\n * The scrollerGremlin gremlin can be customized as follows:\n *\n *   scrollerGremlin.positionSelector(function() { // return a random position to scroll to });\n *   scrollerGremlin.showAction(function(element) { // show the gremlin activity on screen });\n *   scrollerGremlin.logger(loggerObject); // inject a logger\n *   scrollerGremlin.randomizer(randomizerObject); // inject a randomizer\n *\n * Example usage:\n *\n *   horde.gremlin(gremlins.species.clicker()\n *     .positionSelector(function() {\n *       // only click in the app\n *       var $list = $('#todoapp');\n *       var offset = $list.offset();\n *       return [\n *         parseInt(Math.random() * $list.outerWidth() + offset.left),\n *         parseInt(Math.random() * ($list.outerHeight() + $('#info').outerHeight()) + offset.top)\n *       ];\n *     })\n *   )\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var configurable = require('../utils/configurable');\n    var Chance = require('../vendor/chance');\n\n    return function() {\n\n        var document = window.document,\n            documentElement = document.documentElement,\n            body = document.body;\n\n        var defaultPositionSelector = function() {\n            var documentWidth = Math.max(body.scrollWidth, body.offsetWidth, documentElement.scrollWidth, documentElement.offsetWidth, documentElement.clientWidth),\n                documentHeight = Math.max(body.scrollHeight, body.offsetHeight, documentElement.scrollHeight, documentElement.offsetHeight, documentElement.clientHeight);\n\n            return [\n                config.randomizer.natural({ max: documentWidth  - documentElement.clientWidth }),\n                config.randomizer.natural({ max: documentHeight  - documentElement.clientHeight })\n            ];\n        };\n\n        var defaultShowAction = function(scrollX, scrollY) {\n            var clickSignal = document.createElement('div');\n            clickSignal.style.border = \"3px solid red\";\n            clickSignal.style.width = (documentElement.clientWidth - 25) + \"px\";\n            clickSignal.style.height = (documentElement.clientHeight - 25) + \"px\";\n            clickSignal.style.position = \"absolute\";\n            clickSignal.style.webkitTransition = 'opacity 1s ease-out';\n            clickSignal.style.mozTransition = 'opacity 1s ease-out';\n            clickSignal.style.transition = 'opacity 1s ease-out';\n            clickSignal.style.left = (scrollX + 10) + 'px';\n            clickSignal.style.top = (scrollY + 10) + 'px';\n            var element = body.appendChild(clickSignal);\n            setTimeout(function() {\n                body.removeChild(element);\n            }, 1000);\n            setTimeout(function() {\n                element.style.opacity = 0;\n            }, 50);\n        };\n\n        /**\n         * @mixin\n         */\n        var config = {\n            positionSelector: defaultPositionSelector,\n            showAction:       defaultShowAction,\n            logger:           {},\n            randomizer:       new Chance()\n        };\n\n        /**\n         * @mixes config\n         */\n        function scrollerGremlin() {\n            var position = config.positionSelector(),\n                scrollX = position[0],\n                scrollY = position[1];\n\n            window.scrollTo(scrollX, scrollY);\n\n            if (typeof config.showAction == 'function') {\n                config.showAction(scrollX, scrollY);\n            }\n\n            if (typeof config.logger.log == 'function') {\n                config.logger.log('gremlin', 'scroller  ', 'scroll to', scrollX, scrollY);\n            }\n        }\n\n        configurable(scrollerGremlin, config);\n\n        return scrollerGremlin;\n    };\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/species/typer.js":"/**\n * The typer gremlin types keys on the keyboard\n *\n * Note that keyboard events must be localized somewhere on screen, so this\n * gremlins picks a random screen location first.\n *\n * By default, the typer gremlin activity is showed by a letter surrounded by\n * a red circle.\n *\n *   var typerGremlin = gremlins.species.typer();\n *   horde.gremlin(typerGremlin);\n *\n * The typerGremlin gremlin can be customized as follows:\n *\n *   typerGremlin.eventTypes(['keypress', 'keyup', 'keydown']); // types of events to trigger\n *   typerGremlin.showAction(function(element) { // show the gremlin activity on screen });\n *   typerGremlin.logger(loggerObject); // inject a logger\n *   typerGremlin.randomizer(randomizerObject); // inject a randomizer\n *\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var configurable = require('../utils/configurable');\n    var Chance = require('../vendor/chance');\n\n    return function() {\n\n        var document = window.document,\n            documentElement = document.documentElement,\n            body = document.body;\n\n        var defaultEventTypes = ['keypress', 'keyup', 'keydown'];\n\n        var defaultShowAction = function (targetElement, x, y, key) {\n            var typeSignal = document.createElement('div');\n            typeSignal.style.border = \"3px solid orange\";\n            typeSignal.style['border-radius'] = '50%';\n            typeSignal.style.width = \"40px\";\n            typeSignal.style.height = \"40px\";\n            typeSignal.style['box-sizing'] = 'border-box';\n            typeSignal.style.position = \"absolute\";\n            typeSignal.style.webkitTransition = 'opacity 1s ease-out';\n            typeSignal.style.mozTransition = 'opacity 1s ease-out';\n            typeSignal.style.transition = 'opacity 1s ease-out';\n            typeSignal.style.left = x + 'px';\n            typeSignal.style.top = y + 'px';\n            typeSignal.style.textAlign = 'center';\n            typeSignal.style.paddingTop = '7px';\n            typeSignal.innerHTML = String.fromCharCode(key);\n\n            var element = body.appendChild(typeSignal);\n            setTimeout(function () {\n                body.removeChild(element);\n            }, 1000);\n            setTimeout(function () {\n                element.style.opacity = 0;\n            }, 50);\n        };\n\n        /**\n         * @mixin\n         */\n        var config = {\n            eventTypes: defaultEventTypes,\n            showAction: defaultShowAction,\n            logger:     {},\n            randomizer: new Chance()\n        };\n\n        /**\n         * @mixes config\n         */\n        function typerGremlin() {\n            var documentWidth = Math.max(body.scrollWidth, body.offsetWidth, documentElement.scrollWidth, documentElement.offsetWidth, documentElement.clientWidth),\n                documentHeight = Math.max(body.scrollHeight, body.offsetHeight, documentElement.scrollHeight, documentElement.offsetHeight, documentElement.clientHeight),\n                keyboardEvent = document.createEvent(\"KeyboardEvent\"),\n                initMethod = typeof keyboardEvent.initKeyboardEvent !== 'undefined' ? \"initKeyboardEvent\" : \"initKeyEvent\",\n                key = config.randomizer.natural({ max: 360}),\n                posX = config.randomizer.natural({ max: documentElement.clientWidth - 1 }),\n                posY = config.randomizer.natural({ max: documentElement.clientHeight - 1 }),\n                targetElement = document.elementFromPoint(posX, posY);\n\n            keyboardEvent[initMethod](config.randomizer.pick(config.eventTypes), true, true, targetElement, false, false,  false,  false,  key, 0);\n\n            targetElement.dispatchEvent(keyboardEvent);\n\n            if (typeof config.showAction === 'function') {\n                config.showAction(targetElement, posX, posY, key);\n            }\n\n            if (typeof config.logger.log == 'function') {\n                config.logger.log('gremlin', 'typer       type', key, 'at', posX, posY);\n            }\n        }\n\n        configurable(typerGremlin, config);\n\n        return typerGremlin;\n    };\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/strategies/allTogether.js":"/**\n * Execute all Gremlins species ; repeat 10ms after for 100 times\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var executeInSeries = require('../utils/executeInSeries');\n    var configurable = require('../utils/configurable');\n\n    return function() {\n\n        /**\n         * @mixin\n         */\n        var config = {\n            delay: 10, // delay in milliseconds between each wave\n            nb: 100    // number of waves to execute (can be overridden in params)\n        };\n\n        var stopped;\n        var doneCallback;\n\n        /**\n         * @mixes config\n         */\n        function allTogetherStrategy(gremlins, params, done) {\n            var nb = params && params.nb ? params.nb : config.nb,\n                horde = this;\n\n            stopped = false;\n            doneCallback = done; // done can also be called by stop()\n\n            function executeAllGremlins(callback) {\n                executeInSeries(gremlins, [], horde, callback);\n            }\n\n            function executeNextWave(i) {\n                if (stopped) return;\n                if (i >= nb) return callDone();\n                executeAllGremlins(function() {\n                    setTimeout(function() {\n                        executeNextWave(++i);\n                    }, config.delay);\n                });\n            }\n\n            executeNextWave(0);\n        }\n\n        function callDone() {\n            if (typeof doneCallback === 'function') {\n                doneCallback();\n            }\n            doneCallback = null;\n        }\n\n        allTogetherStrategy.stop = function() {\n            stopped = true;\n            setTimeout(callDone, 4);\n        };\n\n        configurable(allTogetherStrategy, config);\n\n        return allTogetherStrategy;\n    };\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/strategies/bySpecies.js":"/**\n * For each species, execute the gremlin 100 times, separated by a 10ms delay\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var executeInSeries = require('../utils/executeInSeries');\n    var configurable = require('../utils/configurable');\n\n    return function() {\n\n        /**\n         * @mixin\n         */\n        var config = {\n            delay: 10, // delay in milliseconds between each attack\n            nb: 100    // number of attacks to execute (can be overridden in params)\n        };\n\n        var stopped;\n        var doneCallback;\n\n        /**\n         * @mixes config\n         */\n        function bySpeciesStrategy(gremlins, params, done) {\n            var nb = params && params.nb ? params.nb : config.nb,\n                gremlins = gremlins.slice(0), // clone the array to avoid modifying the original\n                horde = this;\n\n            stopped = false;\n            doneCallback = done; // done can also be called by stop()\n\n            function executeNext(gremlin, i, callback) {\n                if (stopped) return;\n                if (i >= nb) return callback();\n                executeInSeries([gremlin], [], horde, function() {\n                    setTimeout(function() {\n                        executeNext(gremlin, ++i, callback);\n                    }, config.delay);\n                });\n            }\n\n            function executeNextGremlin() {\n                if (stopped) return;\n                if (gremlins.length === 0) {\n                    return callDone();\n                }\n                executeNext(gremlins.shift(), 0, executeNextGremlin);\n            }\n\n            executeNextGremlin();\n        }\n\n        bySpeciesStrategy.stop = function() {\n            stopped = true;\n            setTimeout(callDone, 4);\n        };\n\n        function callDone() {\n            if (typeof doneCallback === 'function') {\n                doneCallback();\n            }\n            doneCallback = null;\n        }\n\n        configurable(bySpeciesStrategy, config);\n\n        return bySpeciesStrategy;\n    };\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/strategies/distribution.js":"/**\n * Execute all Gremlins randomly following a distribution, separated by 10ms delay, for 100 times\n *\n * This is the default attack strategy, so selecting no strategy is equivalent to\n *\n *   var distributionStrategy = gremlins.strategies.distribution();\n *   horde.strategy(distributionStrategy);\n *\n * By default, this strategy uses a uniform distribution, i.e. all gremlins\n * have an equal chance to be selected for the next action.\n *\n * The distribution strategy can be customized as follows:\n *\n *   distributionStrategy.distribution([0.25, 0.25, 0.25, 0.25]); // chances for each gremlin to be selected ; total must equal 1\n *   distributionStrategy.delay(10); // delay in milliseconds between each wave\n *   distributionStrategy.nb(100); // number of waves to execute (can be overridden in params)\n *   distributionStrategy.randomizer(randomizerObject); // inject a randomizer\n *\n * Example usage:\n *   horde.strategy(gremlins.strategies.distribution()\n *     .delay(50)\n *     .distribution([\n *       0.3, // first gremlin\n *       0.3, // second gremlin\n *       0.3, // third gremlin\n *       0.1, // fourth gremlin\n *     ])\n *   )\n */\ndefine(function(require) {\n    \"use strict\";\n\n    var executeInSeries = require('../utils/executeInSeries');\n    var configurable = require('../utils/configurable');\n    var Chance = require('../vendor/chance');\n\n    return function() {\n\n        /**\n         * @mixin\n         */\n        var config = {\n            distribution: [],  // percentage of each gremlin species ; the sum of all values should equal to 1\n            delay:        10,  // delay in milliseconds between each wave\n            nb:           100, // number of waves to execute (can be overridden in params)\n            randomizer:   new Chance()\n        };\n\n        var stopped;\n        var doneCallback;\n\n        /**\n         * @mixes config\n         */\n        function distributionStrategy(gremlins, params, done) {\n            var nb = params && params.nb ? params.nb : config.nb,\n                gremlins = gremlins.slice(0), // clone the array to avoid modifying the original\n                distribution = config.distribution.length === 0 ? getUniformDistribution(gremlins) : config.distribution,\n                horde = this;\n\n            if (nb === 0) return done();\n\n            stopped = false;\n            doneCallback = done; // done can also be called by stop()\n\n            function executeNext(gremlin, i, callback) {\n                if (stopped) return;\n                if (i >= nb) return callDone();\n                executeInSeries([gremlin], [], horde, function() {\n                    setTimeout(function() {\n                        executeNext(pickGremlin(gremlins, distribution), ++i, callback);\n                    }, config.delay);\n                });\n            }\n\n            executeNext(pickGremlin(gremlins, distribution), 0, executeNext);\n        }\n\n        function getUniformDistribution(gremlins) {\n            var len = gremlins.length;\n            if (len === 0) return [];\n            var distribution = [];\n            var value = 1 / len;\n            for (var i = 0; i < len ; i++) {\n                distribution.push(value);\n            }\n            return distribution;\n        }\n\n        function pickGremlin(gremlins, distribution) {\n            var chance = 0;\n            var random = config.randomizer.floating({ min: 0, max: 1 });\n            for (var i = 0, count = gremlins.length; i < count; i++) {\n                chance += distribution[i];\n                if (random <= chance) return gremlins[i];\n            }\n            // no gremlin - probably error in the distribution\n            return function() {};\n        }\n\n        distributionStrategy.stop = function() {\n            stopped = true;\n            setTimeout(callDone, 4);\n        };\n\n        function callDone() {\n            if (typeof doneCallback === 'function') {\n                doneCallback();\n            }\n            doneCallback = null;\n        }\n\n        configurable(distributionStrategy, config);\n\n        return distributionStrategy;\n    };\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/utils/configurable.js":"define(function(require) {\n    \"use strict\";\n\n    /**\n     * Make a function configurable\n     *\n     * Configurable functions modify their configuration. The configuration\n     * must be an object defined in the function closure.\n     *\n     *   var config = {\n     *     foo: 1\n     *   };\n     *   function bar() {\n     *      console.log('foo value is', config.foo);\n     *   }\n     *   bar(); // 'foo value is 1'\n     *   config.foo = 3;     \n     *   bar(); // 'foo value is 3'\n     *\n     * The configurable behavior modifies the function object, adding one\n     * method for each item in the configuratton. \n     * \n     * The added methods use the same name as the configuraiton items. The \n     * added methods are both setters and getters, which means that they return\n     * the config value when called without argument, and they modify the \n     * config value when called with an argument.\n     *\n     *   configurable(bar, config);\n     *   // Now bar has a foo() method\n     *\n     *   bar.foo(2)\n     *   bar(); // 'foo value is 2'\n     *   bar.foo(); // 2\n     *\n     * @param {Function} targetFunction - The functions to make configurable\n     * @param {Object} config - The configuration object with the default config values\n     */\n    function configurable(targetFunction, config) {\n        for (var item in config) {\n            (function(item) {\n                targetFunction[item] = function(value) {\n                    if (!arguments.length) return config[item];\n                    config[item] = value;\n                    return targetFunction;\n                };\n            })(item); // for doesn't create a closure, forcing it\n        }\n    }\n\n    return configurable;\n});\n","/home/travis/build/npmtest/node-npmtest-gremlins.js/node_modules/gremlins.js/src/utils/executeInSeries.js":"define(function(require) {\n    \"use strict\";\n\n    /**\n     * Execute a list of functions one after the other.\n     *\n     * Functions can be asynchronous or asynchronous, they will always be\n     * executed in the order of the list.\n     *\n     * @param {Function[]} callbacks - The functions to execute\n     * @param {Array} args - The arguments passed to each function\n     * @param {Object|null} context - The object the functions must be bound to\n     * @param {Function} done - The final callback to execute once all functions are executed\n     */\n    function executeInSeries(callbacks, args, context, done) {\n        var nbArguments = args.length;\n        callbacks = callbacks.slice(0); // clone the array to avoid modifying the original\n\n        var iterator = function(callbacks, args) {\n            if (!callbacks.length) {\n                return typeof done === 'function' ? done() : true;\n            }\n\n            var callback = callbacks.shift();\n            callback.apply(context, args);\n\n            // Is the callback synchronous ?\n            if (callback.length === nbArguments) {\n                iterator(callbacks, args, done);\n            }\n        };\n\n        args.push(function(){\n            iterator(callbacks, args, done);\n        });\n\n        iterator(callbacks, args, done);\n    }\n\n    return executeInSeries;\n});\n"}